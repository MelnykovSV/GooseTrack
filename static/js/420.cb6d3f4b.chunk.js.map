{"version":3,"file":"static/js/420.cb6d3f4b.chunk.js","mappings":"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","sources":["hooks/useResizeScreen.js","components/CalendarTable/CalendarTable.styled.jsx","components/CalendarTable/CalendarTable.jsx","pages/CalendarPage/CalendarPage.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\n\n// const MOBILE_SCREEN = 375;\nconst TABLET_SCREEN = 768;\nconst DESKTOP_SCREEN = 1440;\n\nexport const useResizeScreen = () => {\n  const [isMobile, setMobile] = useState(\n    () => window.innerWidth < TABLET_SCREEN\n  );\n  const [isTablet, setTablet] = useState(\n    () =>\n      window.innerWidth < DESKTOP_SCREEN && window.innerWidth > TABLET_SCREEN\n  );\n  const [isDesktop, setDesktop] = useState(\n    () => window.innerWidth >= DESKTOP_SCREEN\n  );\n\n  useEffect(() => {\n    const handleResize = () => {\n      setMobile(window.innerWidth < TABLET_SCREEN);\n      setTablet(\n        window.innerWidth < DESKTOP_SCREEN && window.innerWidth > TABLET_SCREEN\n      );\n      setDesktop(window.innerWidth >= DESKTOP_SCREEN);\n    };\n\n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  return { isMobile, isTablet, isDesktop };\n};\n","import styled from '@emotion/styled';\n\nexport const Table = styled.div`\n  border: 1px solid ${({ theme }) => theme.stroke};\n  border-radius: 8px;\n\n  overflow: hidden;\n\n  @media screen and (min-width: 768px) {\n    border-color: ${({ theme }) => theme.strokeTransparant};\n  }\n`;\n\nexport const TableRow = styled.div`\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  min-height: 94px;\n\n  background-color: ${({ theme }) => theme.bgPrimary};\n\n  &:not(:last-child) {\n    border-bottom-color: ${({ theme }) => theme.stroke};\n    border-bottom-width: 1px;\n    border-bottom-style: solid;\n  }\n\n  @media screen and (min-width: 768px) {\n    min-height: 144px;\n\n    &:not(:last-child) {\n      border-bottom-color: ${({ theme }) => theme.strokeTransparant};\n    }\n  }\n\n  @media screen and (min-width: 1440px) {\n    min-height: 125px;\n  }\n`;\n\nexport const TableCell = styled.div`\n  position: relative;\n\n  padding-left: 2px;\n  padding-right: 2px;\n  padding-top: 48px;\n  padding-bottom: 2px;\n\n  overflow: hidden;\n\n  cursor: ${({ $isEmpty }) => ($isEmpty ? 'default' : 'pointer')};\n\n  &:not(:first-of-type) {\n    border-left-color: ${({ theme }) => theme.stroke};\n    border-left-width: 1px;\n    border-left-style: solid;\n  }\n\n  &:hover {\n    & .disabled-hover:not(:hover) + .container {\n      background-color: ${({ theme }) => theme.accentBlueLight};\n\n      & .value {\n        color: ${({ theme }) => theme.textPrimaryLight};\n      }\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    padding-left: 4px;\n    padding-right: 4px;\n    padding-top: 58px;\n    padding-bottom: 4px;\n\n    &:not(:last-child) {\n      border-bottom-color: ${({ theme }) => theme.strokeTransparant};\n    }\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding-left: 8px;\n    padding-right: 8px;\n    padding-bottom: 8px;\n  }\n`;\n\nexport const DayOfMonthContainer = styled.div`\n  position: absolute;\n  top: 8px;\n  right: 4px;\n\n  padding: 4px 6px;\n\n  background-color: ${({ theme, $isCurrentDate }) =>\n    $isCurrentDate ? theme.accentBlue : 'transparent'};\n  border-radius: 6px;\n\n  cursor: pointer;\n\n  transition: background-color\n    ${({ theme }) => `${theme.transitions.time} ${theme.transitions.cubic}`};\n\n  @media screen and (min-width: 768px) {\n    top: 14px;\n    right: 14px;\n\n    padding: 4px 8px;\n  }\n`;\n\nexport const DayOfMonth = styled.p`\n  margin: 0;\n\n  font-size: 12px;\n  font-weight: 700;\n  line-height: 1.16;\n  text-transform: uppercase;\n  color: ${({ theme, $isCurrentDate }) =>\n    $isCurrentDate ? theme.white : theme.textPrimaryLight};\n\n  user-select: none;\n\n  transition: color\n    ${({ theme }) => `${theme.transitions.time} ${theme.transitions.cubic}`};\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    line-height: 1.125;\n  }\n`;\n\nconst Button = styled.button`\n  padding-top: 2px;\n  padding-right: 2px;\n  padding-bottom: 2px;\n  padding-left: 6px;\n  width: 100%;\n\n  font-size: 10px;\n  font-weight: 700;\n  line-height: 1.4;\n  white-space: nowrap;\n  text-align: start;\n\n  text-overflow: ellipsis;\n  overflow: hidden;\n  cursor: pointer;\n\n  border-radius: 8px;\n  border-width: 2px;\n  border-style: solid;\n  border-color: transparent;\n\n  user-select: none;\n  outline: none;\n\n  transition: border-color\n    ${({ theme }) => `${theme.transitions.time} ${theme.transitions.cubic}`};\n\n  @media screen and (min-width: 768px) {\n    padding: 1px 5px;\n\n    font-size: 14px;\n    line-height: 1.28;\n\n    border-width: 3px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding: 1px 7px;\n\n    border-width: 3px;\n  }\n`;\n\nexport const MiniCard = styled(Button)`\n  color: ${({ theme, $priority }) => {\n    switch ($priority) {\n      case 'low':\n        return theme.accentPrimary;\n      case 'medium':\n        return theme.accentYellow;\n      case 'high':\n        return theme.accentRed;\n      default:\n        throw new Error('Invalid status');\n    }\n  }};\n\n  background: ${({ theme, $priority }) => {\n    switch ($priority) {\n      case 'low':\n        return theme.accentBlueLight;\n      case 'medium':\n        return theme.accentYellowLight;\n      case 'high':\n        return theme.accentRedLight;\n      default:\n        throw new Error('Invalid status');\n    }\n  }};\n\n  &:not(:last-child) {\n    margin-bottom: 2px;\n  }\n\n  &:hover,\n  &:focus {\n    border-color: ${({ theme, $priority }) => {\n      switch ($priority) {\n        case 'low':\n          return theme.accentPrimary;\n        case 'medium':\n          return theme.accentYellow;\n        case 'high':\n          return theme.accentRed;\n        default:\n          throw new Error('Invalid status');\n      }\n    }};\n  }\n\n  @media screen and (min-width: 768px) {\n    &:not(:last-child) {\n      margin-bottom: 4px;\n    }\n  }\n\n  @media screen and (min-width: 1440px) {\n    &:not(:last-child) {\n      margin-bottom: 8px;\n    }\n  }\n`;\n\nexport const MoreButton = styled(Button)`\n  margin-top: 2px;\n\n  color: #333333;\n\n  background: #e5e5e5;\n\n  &:hover,\n  &:focus {\n    border-color: #333333;\n  }\n\n  @media screen and (min-width: 768px) {\n    margin-top: 4px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    margin-top: 8px;\n  }\n`;\n","import { useEffect, useMemo, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { format, getMonth, getYear } from 'date-fns';\nimport Menu from '@mui/material/Menu';\n\nimport { getTasksByMonth } from 'redux/tasks/operations';\nimport { selectTasks } from 'redux/selectors';\nimport { useResizeScreen } from 'hooks';\n\nimport { TaskModal } from 'components/TasksComponents';\n\nimport * as S from './CalendarTable.styled';\n\nexport const DropDownTaskList = ({ tasks, onOpenTaskModal }) => {\n  const [anchorEl, setAnchorEl] = useState(null);\n  const open = Boolean(anchorEl);\n  const { isMobile, isTablet } = useResizeScreen();\n\n  const menuStyles = (() => {\n    if (isMobile) {\n      return { maxWidth: 84, paddingX: '2px', paddingY: '4px' };\n    } else if (isTablet) {\n      return { maxWidth: 112, paddingX: '4px', paddingY: '8px' };\n    } else {\n      return { maxWidth: 160, paddingX: '4px', paddingY: '8px' };\n    }\n  })();\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div>\n      <S.MoreButton\n        type=\"button\"\n        id=\"more-button\"\n        aria-controls={open ? 'more-menu' : undefined}\n        aria-haspopup=\"true\"\n        aria-expanded={open ? 'true' : undefined}\n        onClick={handleClick}\n      >\n        More\n      </S.MoreButton>\n      <Menu\n        id=\"more-menu\"\n        anchorEl={anchorEl}\n        open={open}\n        onClose={handleClose}\n        MenuListProps={{\n          'aria-labelledby': 'more-button',\n        }}\n        sx={{\n          '.MuiPaper-root': { ...menuStyles, borderRadius: '8px' },\n          '& .MuiList-root': { padding: 0 },\n        }}\n      >\n        {tasks.map(({ id, title, priority }) => (\n          <S.MiniCard\n            key={id}\n            type=\"button\"\n            $priority={priority}\n            onClick={onOpenTaskModal}\n          >\n            {title}\n          </S.MiniCard>\n        ))}\n      </Menu>\n    </div>\n  );\n};\n\nexport const CalendarTable = () => {\n  const { month } = useParams();\n  const dispatch = useDispatch();\n  const tasks = useSelector(selectTasks);\n\n  const [date, setDate] = useState(new Date(month));\n  const [isOpenTaskModal, setIsOpenTaskModal] = useState(false);\n  const [choseTask, setChoseTask] = useState(null);\n\n  const navigate = useNavigate();\n\n  const { isMobile, isTablet, isDesktop } = useResizeScreen();\n\n  useEffect(() => {\n    setDate(new Date(month));\n    dispatch(getTasksByMonth(month));\n  }, [month, dispatch]);\n\n  const tableData = useMemo(() => {\n    const year = getYear(date);\n    const month = getMonth(date);\n    const currentDate = format(new Date(), 'yyyy-MM-dd');\n    const daysInMonth = new Date(year, month + 1, 0).getDate();\n    let firstDayOfWeek = new Date(year, month, 1).getDay();\n    let lastDayOfWeek = new Date(year, month, daysInMonth).getDay();\n\n    firstDayOfWeek = firstDayOfWeek === 0 ? 7 : firstDayOfWeek;\n    lastDayOfWeek = lastDayOfWeek === 0 ? 7 : lastDayOfWeek;\n\n    const tableCellData = [];\n\n    for (let i = 1; i < firstDayOfWeek; i++) {\n      tableCellData.push({ dayOfMonth: null, tasks: [] });\n    }\n\n    for (let i = 1; i <= daysInMonth; i++) {\n      const formattedDate = format(new Date(year, month, i), 'yyyy-MM-dd');\n\n      const rowData = {\n        dayOfMonth: i,\n        fullDate: formattedDate,\n        isCurrentDate: currentDate === formattedDate,\n        tasks: tasks.filter(({ date }) => date === formattedDate),\n      };\n\n      tableCellData.push(rowData);\n    }\n\n    for (let i = lastDayOfWeek; i < 7; i++) {\n      tableCellData.push({ dayOfMonth: null, tasks: [] });\n    }\n\n    const tableData = [];\n\n    for (let i = 0; i < tableCellData.length; i += 7) {\n      tableData.push(tableCellData.slice(i, i + 7));\n    }\n\n    return tableData;\n  }, [date, tasks]);\n\n  const countNumberOfDisplayedTasks = tasks => {\n    if (isMobile) {\n      return tasks.length > 2 ? 1 : 2;\n    } else if (isTablet) {\n      return tasks.length > 3 ? 2 : 3;\n    } else {\n      return tasks.length > 2 ? 1 : 2;\n    }\n  };\n\n  const handleChooseDayCell = choseDate => e => {\n    if (e.target !== e.currentTarget) return;\n\n    navigate(`/calendar/day/${choseDate}`);\n  };\n\n  const handleChooseDay = choseDate => () => {\n    navigate(`/calendar/day/${choseDate}`);\n  };\n\n  const handleOpenTaskModal = task => () => {\n    setChoseTask(task);\n    setIsOpenTaskModal(true);\n  };\n\n  const handleCloseTaskModal = () => {\n    setIsOpenTaskModal(false);\n    setChoseTask(null);\n  };\n\n  return (\n    <S.Table>\n      {tableData.map((tableRowData, idx) => (\n        <S.TableRow key={idx}>\n          {tableRowData.map(\n            ({ dayOfMonth, fullDate, tasks, isCurrentDate }, idx) => {\n              const numberOfDisplayedTasks = countNumberOfDisplayedTasks(tasks);\n\n              const isEmptyCell = dayOfMonth === null;\n\n              return (\n                <S.TableCell\n                  key={idx}\n                  $isEmpty={isEmptyCell}\n                  onClick={\n                    isEmptyCell ? () => {} : handleChooseDayCell(fullDate)\n                  }\n                >\n                  <div className=\"disabled-hover\">\n                    <div>\n                      {tasks.slice(0, numberOfDisplayedTasks).map(task => (\n                        <S.MiniCard\n                          type=\"button\"\n                          key={task.id}\n                          $priority={task.priority}\n                          onClick={handleOpenTaskModal(task)}\n                        >\n                          {task.title}\n                        </S.MiniCard>\n                      ))}\n                    </div>\n                    {((tasks.length > 2 && isMobile) ||\n                      (tasks.length > 3 && isTablet) ||\n                      (tasks.length > 2 && isDesktop)) && (\n                      <DropDownTaskList\n                        tasks={tasks}\n                        onOpenTaskModal={handleOpenTaskModal}\n                      />\n                    )}\n                  </div>\n                  {dayOfMonth && (\n                    <S.DayOfMonthContainer\n                      className=\"container\"\n                      $isCurrentDate={isCurrentDate}\n                      onClick={handleChooseDay(fullDate)}\n                    >\n                      <S.DayOfMonth\n                        className=\"value\"\n                        $isCurrentDate={isCurrentDate}\n                      >\n                        {dayOfMonth}\n                      </S.DayOfMonth>\n                    </S.DayOfMonthContainer>\n                  )}\n                </S.TableCell>\n              );\n            }\n          )}\n        </S.TableRow>\n      ))}\n\n      {choseTask && (\n        <TaskModal\n          isOpenModal={isOpenTaskModal}\n          onCloseModal={handleCloseTaskModal}\n          task={choseTask}\n        />\n      )}\n    </S.Table>\n  );\n};\n","import { CalendarTable } from 'components/CalendarTable';\n\nconst CalendarPage = () => {\n  return (\n    <>\n      <div>calendar</div>\n      <CalendarTable />\n    </>\n  );\n};\n\nexport default CalendarPage;\n"],"names":["TABLET_SCREEN","DESKTOP_SCREEN","useResizeScreen","_useState","useState","window","innerWidth","_useState2","_slicedToArray","isMobile","setMobile","_useState3","_useState4","isTablet","setTablet","_useState5","_useState6","isDesktop","setDesktop","useEffect","handleResize","addEventListener","removeEventListener","Table","styled","_templateObject","_taggedTemplateLiteral","_ref","theme","stroke","_ref2","strokeTransparant","TableRow","_templateObject2","_ref3","bgPrimary","_ref4","_ref5","TableCell","_templateObject3","_ref6","$isEmpty","_ref7","_ref8","accentBlueLight","_ref9","textPrimaryLight","_ref10","DayOfMonthContainer","_templateObject4","_ref11","$isCurrentDate","accentBlue","_ref12","concat","transitions","time","cubic","DayOfMonth","_templateObject5","_ref13","white","_ref14","Button","_templateObject6","_ref15","MiniCard","_templateObject7","_ref16","$priority","accentPrimary","accentYellow","accentRed","Error","_ref17","accentYellowLight","accentRedLight","_ref18","MoreButton","_templateObject8","DropDownTaskList","tasks","onOpenTaskModal","anchorEl","setAnchorEl","open","Boolean","_useResizeScreen","menuStyles","maxWidth","paddingX","paddingY","_jsxs","children","_jsx","S","type","id","undefined","onClick","event","currentTarget","Menu","onClose","MenuListProps","sx","_objectSpread","borderRadius","padding","map","title","priority","CalendarTable","month","useParams","dispatch","useDispatch","useSelector","selectTasks","Date","date","setDate","isOpenTaskModal","setIsOpenTaskModal","_useState7","_useState8","choseTask","setChoseTask","navigate","useNavigate","_useResizeScreen2","getTasksByMonth","tableData","useMemo","year","getYear","getMonth","currentDate","format","daysInMonth","getDate","firstDayOfWeek","getDay","lastDayOfWeek","tableCellData","i","push","dayOfMonth","_loop","formattedDate","rowData","fullDate","isCurrentDate","filter","length","slice","handleChooseDay","choseDate","handleOpenTaskModal","task","tableRowData","idx","numberOfDisplayedTasks","countNumberOfDisplayedTasks","isEmptyCell","e","target","className","TaskModal","isOpenModal","onCloseModal","_Fragment"],"sourceRoot":""}