{"version":3,"file":"static/js/278.034cf5d6.chunk.js","mappings":"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","sources":["images/Statistics/Icons/icon-Ellipse.svg","components/Statistics/Calendar/Calendar.styled.jsx","components/Statistics/Calendar/Calendar.jsx","components/Statistics/StatisticsChart.styled.jsx","components/Statistics/StatisticsChart.jsx","components/Statistics/Statistics.styled.jsx","components/Statistics/Statistics.jsx","pages/StatisticsPage/StatisticsPage.jsx"],"sourcesContent":["var _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgIconEllipse(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    style: {\n      position: \"absolute\",\n      width: 0,\n      height: 0,\n      overflow: \"hidden\"\n    },\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-Ellipse-3\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#ffd2dd\",\n    style: {\n      fill: \"var(--color2, #ffd2dd)\"\n    },\n    d: \"M32 16c0 8.837-7.163 16-16 16s-16-7.163-16-16c0-8.837 7.163-16 16-16s16 7.163 16 16z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-Ellipse-4\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#3e85f3\",\n    style: {\n      fill: \"var(--color1, #3e85f3)\"\n    },\n    d: \"M32 16c0 8.837-7.163 16-16 16s-16-7.163-16-16c0-8.837 7.163-16 16-16s16 7.163 16 16z\"\n  }))));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgIconEllipse);\nexport default __webpack_public_path__ + \"static/media/icon-Ellipse.faac81f03e1664ae4dee44512fae3c6d.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components';\n\nexport const MiniCalendar = styled.div`\n  position: absolute;\n  top: 66px;\n  left: 14px;\n  z-index: 2;\n\n  @media screen and (min-width: 768px) {\n    top: 174px;\n    left: 64px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    top: 176px;\n    left: 153px;\n  }\n`;","import { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\nimport { DateCalendar } from '@mui/x-date-pickers/DateCalendar';\nimport { MiniCalendar } from './Calendar.styled';\nimport { format } from 'date-fns';\n\nconst Calendar = ({ onDateChange }) => {\n  const handleDateChange = date => {\n    const formattedDate = format(date, 'dd MMMM yyyy');\n    onDateChange(formattedDate);\n  };\n\n  return (\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\n      <MiniCalendar>\n        <DateCalendar className=\"styles\" onChange={handleDateChange} />\n      </MiniCalendar>\n    </LocalizationProvider>\n  );\n};\n\nexport default Calendar;","import styled from 'styled-components';\n\nexport const device = {\n  tablet: `(min-width: 768px)`,\n  desktop: `(min-width: 1440px)`,\n};\n\nexport const Schedule = styled.div`\n  padding-right: 14px;\n  padding-left: 14px;\n  margin-top: 40px;\n  padding-bottom: 135px;\n  width: 100%;\n  height: auto;\n  @media ${device.tablet} {\n    padding-bottom: 224px;\n    padding-right: 32px;\n    padding-left: 32px;\n  }\n  @media ${device.desktop} {\n    padding-bottom: 104px;\n    padding-right: 114px;\n    padding-left: 113px;\n  }\n`;\n\nexport const Container = styled.div`\n  border: 0.8px solid #3e85f3;\n  border-radius: 16px;\n  padding-right: 14px;\n  padding-left: 14px;\n  padding-bottom: 40px;\n  @media ${device.tablet} {\n    padding-bottom: 32px;\n    padding-right: 32px;\n    padding-left: 32px;\n  }\n  @media ${device.desktop} {\n    padding-bottom: 40px;\n    padding-right: 40px;\n    padding-left: 40px;\n  }\n`;\n\nexport const Title = styled.p`\n  font-family: 'Inter', sans-serif;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 21px;\n  letter-spacing: 0em;\n  color: #343434;\n\n  padding-top: 40px;\n  margin-bottom: 20px;\n  @media ${device.tablet} {\n    padding-top: 32px;\n  }\n\n  @media ${device.desktop} {\n    padding-top: 40px;\n  }\n`;","import { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { format } from 'date-fns';\nimport { useMediaQuery } from '@mui/material';\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  ResponsiveContainer,\n  LabelList,\n} from 'recharts';\n\nimport { Schedule, Container, Title } from './StatisticsChart.styled';\nimport { getTasksByMonth } from 'redux/tasks/operations';\nimport { useDispatch } from 'react-redux';\nimport { getTasks, getMonth } from 'redux/tasks/tasksSlice';\n\nconst Chart = ({ currentDayMonth, _ }) => {\n  console.log(currentDayMonth);\n  const tasks = useSelector(getTasks);\n  const month = useSelector(getMonth);\n  const isMobile = useMediaQuery('(max-width: 768px)');\n\n  const dispatch = useDispatch();\n\n  const currentMonth = format(currentDayMonth, 'yyyy-MM');\n  const currentDay = format(currentDayMonth, 'yyyy-MM-dd');\n\n  const [chartData, setChartData] = useState([]);\n\n  function processTaskData(currentDay) {\n    const totalMonthTasksNumber = tasks.length;\n\n    const todoMonthTasksNumber = tasks.filter(\n      task => task.status === 'todo'\n    ).length;\n    const inProgressMonthTasksNumber = tasks.filter(\n      task => task.status === 'inProgress'\n    ).length;\n    const doneMonthTasksNumber = tasks.filter(\n      task => task.status === 'done'\n    ).length;\n\n    const totalDayTasks = tasks.filter(task => task.date === currentDay);\n\n    const totalDayTasksNumber = totalDayTasks.length || 0;\n    const todoDayTasksNumber = totalDayTasks.filter(\n      task => task.status === 'todo'\n    ).length;\n    const inProgressDayTasksNumber = totalDayTasks.filter(\n      task => task.status === 'inProgress'\n    ).length;\n    const doneDayTasksNumber = totalDayTasks.filter(\n      task => task.status === 'done'\n    ).length;\n\n    const chartData = [\n      {\n        name: 'Todo',\n        day: todoDayTasksNumber,\n        dayPercentage: Number(\n          ((todoDayTasksNumber / totalDayTasksNumber) * 100).toFixed(0)\n        ),\n        month: todoMonthTasksNumber,\n        monthPercentage: Number(\n          ((todoMonthTasksNumber / totalMonthTasksNumber) * 100).toFixed(0)\n        ),\n      },\n      {\n        name: 'In Progress',\n        day: inProgressDayTasksNumber,\n        dayPercentage: Number(\n          ((inProgressDayTasksNumber / totalDayTasksNumber) * 100).toFixed(0)\n        ),\n        month: inProgressMonthTasksNumber,\n        monthPercentage: Number(\n          ((inProgressMonthTasksNumber / totalMonthTasksNumber) * 100).toFixed(\n            0\n          )\n        ),\n      },\n      {\n        name: 'Done',\n        day: doneDayTasksNumber,\n        dayPercentage: Number(\n          ((doneDayTasksNumber / totalDayTasksNumber) * 100).toFixed(0)\n        ),\n        month: doneMonthTasksNumber,\n        monthPercentage: Number(\n          ((doneMonthTasksNumber / totalMonthTasksNumber) * 100).toFixed(0)\n        ),\n      },\n    ];\n\n    return chartData;\n  }\n\n  useEffect(() => {\n    if (currentMonth !== month) {\n      dispatch(getTasksByMonth(currentMonth));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentDayMonth]);\n\n  useEffect(() => {\n    if (tasks.length) {\n      setChartData(processTaskData(currentDay));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [tasks, currentDay]);\n\n  const Meaning = ({ x, y, width, value }) => (\n    <g transform={`translate(${x + width / 2},${y + 4})`}>\n      <text\n        x={2}\n        y={3}\n        dy={0}\n        textAnchor=\"middle\"\n        fill=\"#343434\"\n        fontSize={isMobile ? 12 : 16}\n        fontWeight={400}\n      >\n        {!isNaN(value) && value !== 0 ? `${value.toFixed(0)}%` : ''}\n      </text>\n    </g>\n  );\n\n  const generateLinearGradient = (id, color, opacity) => (\n    <linearGradient id={id} x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n      <stop offset=\"0%\" stopColor={color} stopOpacity={opacity} />\n      <stop offset=\"100%\" stopColor={color} stopOpacity={1} />\n    </linearGradient>\n  );\n\n  return (\n    <Schedule>\n      <Container>\n        <Title>Tasks</Title>\n        <ResponsiveContainer width=\"100%\" height={266}>\n          <BarChart\n            data={chartData}\n            barGap={isMobile ? 8 : 14}\n            barSize={isMobile ? 22 : 27}\n          >\n            <CartesianGrid\n              stroke=\"#e3f3ff\"\n              strokeWidth={1}\n              strokeDasharray=\"none\"\n              vertical={false}\n            />\n            <XAxis\n              dataKey=\"name\"\n              tick={{ fontSize: isMobile ? 12 : 16, fill: '#343434' }}\n              tickLine={false}\n              tickMargin={10}\n              axisLine={false}\n            />\n            <YAxis\n              tickFormatter={value => value}\n              domain={[0, 'dataMax']}\n              allowDataOverflow={true}\n              scale=\"linear\"\n              axisLine={false}\n              // tickCount={totalTasks}\n              tickLine={false}\n              tickMargin={30}\n              tick={{ fill: '#343434' }}\n            />\n            <Bar\n              dataKey=\"day\"\n              fill=\"url(#schedule-day)\"\n              radius={[0, 0, 10, 10]}\n            >\n              <LabelList\n                dataKey=\"dayPercentage\"\n                position=\"top\"\n                content={<Meaning />}\n                fill=\"#343434\"\n              />\n            </Bar>\n            <Bar\n              dataKey=\"month\"\n              fill=\"url(#schedule-month)\"\n              radius={[0, 0, 10, 10]}\n            >\n              <LabelList\n                dataKey=\"monthPercentage\"\n                position=\"top\"\n                content={<Meaning />}\n                fill=\"#343434\"\n              />\n            </Bar>\n            <defs>\n              {generateLinearGradient('schedule-day', '#ffd2dd', 0)}\n              {generateLinearGradient('schedule-month', '#3e85f3', 0)}\n            </defs>\n            <CartesianGrid vertical={false} />\n          </BarChart>\n        </ResponsiveContainer>\n      </Container>\n    </Schedule>\n  );\n};\n\nexport default Chart;\n","import styled from 'styled-components';\nimport { FaChevronLeft, FaChevronRight } from 'react-icons/fa';\n\nexport const device = {\n  tablet: `(min-width: 768px)`,\n  desktop: `(min-width: 1440px)`,\n};\n\nexport const General = styled.div`\n  margin: 0 auto;\n  max-width: 100%;\n  height: 100%;\n  position: relative;\n  background: #ffffff;\n  border-radius: 16px;\n  background: #ffffff;\n`;\n\nexport const Option = styled.div`\n  padding-top: 28px;\n  padding-right: 14px;\n  padding-left: 14px;\n  @media ${device.tablet} {\n    padding-top: 132px;\n    padding-right: 64px;\n    padding-left: 64px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n  @media ${device.desktop} {\n    padding-top: 134px;\n    padding-right: 154px;\n    padding-left: 153px;\n  }\n`;\n\nexport const Buttons = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  @media ${device.tablet} {\n    justify-content: flex-start;\n  }\n`;\n\nexport const ButtonData = styled('button')`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 190px;\n  height: 30px;\n  color: #ffffff;\n  background: #3e85f3;\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n  font-family: 'Inter', sans-serif;\n  font-size: 14px;\n  font-weight: 700;\n  line-height: 1.28;\n  letter-spacing: 0em;\n  text-transform: uppercase;\n  @media ${device.tablet} {\n    width: 190px;\n    height: 34px;\n    margin-right: 8px;\n  }\n`;\n\nexport const ButtonsIcon = styled.div`\n  display: flex;\n`;\n\nexport const ButtonLast = styled.button`\n  border-radius: 8px 0 0 8px;\n  border: 1px solid rgba(220, 227, 229, 0.8);\n  fill: white;\n  overflow: hidden;\n  cursor: pointer;\n  padding: 8px, 12px, 8px, 12px;\n  background-color: #ffffff;\n\n  width: 36px;\n  height: 30px;\n  margin: 0;\n  :hover {\n    transform: scale(1.2);\n  }\n  @media ${device.tablet} {\n    width: 38px;\n    height: 34px;\n  }\n`;\n\nexport const IconLast = styled(FaChevronLeft)`\n  transition: fill 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  fill: #111111;\n\n  :hover {\n    transform: scale(1.2);\n    fill: #3e85f3;\n  }\n`;\n\nexport const ButtonNext = styled.button`\n  border-radius: 0 8px 8px 0;\n  border: 1px solid rgba(220, 227, 229, 0.8);\n  overflow: hidden;\n  cursor: pointer;\n  padding: 8px, 12px, 8px, 12px;\n  background-color: #ffffff;\n  width: 36px;\n  height: 30px;\n  margin: 0;\n\n  :hover {\n    transform: scale(1.2);\n  }\n  @media ${device.tablet} {\n    width: 38px;\n    height: 34px;\n  }\n`;\n\nexport const IconNext = styled(FaChevronRight)`\n  transition: fill 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  fill: #111111;\n\n  :hover {\n    transform: scale(1.2);\n    fill: #3e85f3;\n  }\n`;\n\nexport const List = styled.ul`\n  margin-top: 20px;\n  display: flex;\n  list-style-type: none;\n  @media ${device.tablet} {\n    margin-top: 0px;\n  }\n`;\n\nexport const Item = styled.li`\n  font-family: 'Inter', sans-serif;\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 18px;\n  letter-spacing: 0em;\n  color: #343434;\n  text-align: left;\n  &:not(:last-child) {\n    margin-right: 15px;\n  }\n  @media ${device.tablet} {\n    font-size: 16px;\n    &:not(:last-child) {\n      margin-right: 20px;\n    }\n  }\n`;\n\nexport const Icon = styled.svg`\n  width: 8px;\n  height: 8px;\n  margin-right: 8px;\n`;","import { useState } from 'react';\nimport { format, parseISO, startOfToday, parse } from 'date-fns';\nimport Icons from '../../images/Statistics/Icons/icon-Ellipse.svg';\nimport Calendar from './Calendar/Calendar';\nimport Chart from './StatisticsChart';\nimport {\n  General,\n  Option,\n  Buttons,\n  ButtonData,\n  ButtonsIcon,\n  ButtonLast,\n  IconLast,\n  ButtonNext,\n  IconNext,\n  List,\n  Item,\n  Icon,\n} from './Statistics.styled';\n\nconst Statistics = () => {\n  const today = startOfToday();\n  const [currentDayMonth, setCurrentDayMonth] = useState(\n    parseISO(format(today, 'yyyy-MM-dd'))\n  );\n  const [showCalendar, setShowCalendar] = useState(false);\n\n  const handleDateChange = newDate => {\n    const parsedDate = parse(newDate, 'dd MMMM yyyy', new Date());\n    setCurrentDayMonth(parsedDate);\n    setShowCalendar(false);\n  };\n\n  const handleLastDay = () => {\n    const newDate = new Date(currentDayMonth);\n    newDate.setDate(newDate.getDate() - 1);\n    setCurrentDayMonth(newDate);\n  };\n\n  const handleNextDay = () => {\n    const newDate = new Date(currentDayMonth);\n    newDate.setDate(newDate.getDate() + 1);\n    setCurrentDayMonth(newDate);\n  };\n\n  const miniCalendar = () => {\n    setShowCalendar(prevState => !prevState);\n  };\n\n  return (\n    <General>\n      <Option>\n        <Buttons>\n          <ButtonData type=\"button\" onClick={miniCalendar}>\n            {format(currentDayMonth, 'dd MMMM yyyy')}\n          </ButtonData>\n          <ButtonsIcon>\n            <ButtonLast type=\"button\" onClick={handleLastDay}>\n              <IconLast fill=\"#ffffff\" />\n            </ButtonLast>\n            <ButtonNext type=\"button\" onClick={handleNextDay}>\n              <IconNext fill=\"#ffffff\" />\n            </ButtonNext>\n          </ButtonsIcon>\n        </Buttons>\n        <List>\n          <Item>\n            <Icon>\n              <use href={`${Icons}#icon-Ellipse-3`}></use>\n            </Icon>\n            By Day\n          </Item>\n          <Item>\n            <Icon>\n              <use href={`${Icons}#icon-Ellipse-4`}></use>\n            </Icon>\n            By Month\n          </Item>\n        </List>\n      </Option>\n      <Chart\n        currentDayMonth={currentDayMonth}\n        setCurrentDayMonth={setCurrentDayMonth}\n      />\n      {showCalendar && <Calendar onDateChange={handleDateChange} />}\n    </General>\n  );\n};\n\nexport default Statistics;\n","import Statistics from '../../components/Statistics/Statistics';\n\nconst StatisticsPage = () => (\n  <div>\n    <Statistics />\n  </div>\n);\n\nexport default StatisticsPage;"],"names":["MiniCalendar","styled","_templateObject","_taggedTemplateLiteral","_ref","onDateChange","_jsx","LocalizationProvider","dateAdapter","AdapterDateFns","children","DateCalendar","className","onChange","date","formattedDate","format","device","Schedule","Container","_templateObject2","Title","_templateObject3","currentDayMonth","_","console","log","tasks","useSelector","getTasks","month","getMonth","isMobile","useMediaQuery","dispatch","useDispatch","currentMonth","currentDay","_useState","useState","_useState2","_slicedToArray","chartData","setChartData","useEffect","getTasksByMonth","length","totalMonthTasksNumber","todoMonthTasksNumber","filter","task","status","inProgressMonthTasksNumber","doneMonthTasksNumber","totalDayTasks","totalDayTasksNumber","todoDayTasksNumber","inProgressDayTasksNumber","doneDayTasksNumber","name","day","dayPercentage","Number","toFixed","monthPercentage","processTaskData","Meaning","_ref2","x","y","width","value","transform","concat","dy","textAnchor","fill","fontSize","fontWeight","isNaN","generateLinearGradient","id","color","opacity","_jsxs","x1","y1","x2","y2","offset","stopColor","stopOpacity","ResponsiveContainer","height","BarChart","data","barGap","barSize","CartesianGrid","stroke","strokeWidth","strokeDasharray","vertical","XAxis","dataKey","tick","tickLine","tickMargin","axisLine","YAxis","tickFormatter","domain","allowDataOverflow","scale","Bar","radius","LabelList","position","content","General","Option","Buttons","ButtonData","_templateObject4","ButtonsIcon","_templateObject5","ButtonLast","_templateObject6","IconLast","FaChevronLeft","_templateObject7","ButtonNext","_templateObject8","IconNext","FaChevronRight","_templateObject9","List","_templateObject10","Item","_templateObject11","Icon","_templateObject12","today","startOfToday","parseISO","setCurrentDayMonth","_useState3","_useState4","showCalendar","setShowCalendar","type","onClick","prevState","newDate","Date","setDate","getDate","href","Icons","Chart","Calendar","parsedDate","parse","Statistics"],"sourceRoot":""}