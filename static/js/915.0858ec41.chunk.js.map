{"version":3,"file":"static/js/915.0858ec41.chunk.js","mappings":"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","sources":["images/Statistics/Icons/icon-Ellipse.svg","components/Statistics/StatisticsChart.styled.jsx","components/Statistics/StatisticsChart.jsx","components/Statistics/Statistics.styled.jsx","components/Statistics/Statistics.jsx","pages/StatisticsPage/StatisticsPage.jsx"],"sourcesContent":["var _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgIconEllipse(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    style: {\n      position: \"absolute\",\n      width: 0,\n      height: 0,\n      overflow: \"hidden\"\n    },\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-Ellipse-3\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#ffd2dd\",\n    style: {\n      fill: \"var(--color2, #ffd2dd)\"\n    },\n    d: \"M32 16c0 8.837-7.163 16-16 16s-16-7.163-16-16c0-8.837 7.163-16 16-16s16 7.163 16 16z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-Ellipse-4\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#3e85f3\",\n    style: {\n      fill: \"var(--color1, #3e85f3)\"\n    },\n    d: \"M32 16c0 8.837-7.163 16-16 16s-16-7.163-16-16c0-8.837 7.163-16 16-16s16 7.163 16 16z\"\n  }))));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgIconEllipse);\nexport default __webpack_public_path__ + \"static/media/icon-Ellipse.faac81f03e1664ae4dee44512fae3c6d.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components';\n\nexport const device = {\n  tablet: `(min-width: 768px)`,\n  desktop: `(min-width: 1440px)`,\n};\n\nexport const Schedule = styled.div`\n  padding-right: 14px;\n  padding-left: 14px;\n  margin-top: 40px;\n  padding-bottom: 135px;\n  width: 100%;\n  height: auto;\n  @media ${device.tablet} {\n    padding-bottom: 224px;\n    padding-right: 32px;\n    padding-left: 32px;\n  }\n  @media ${device.desktop} {\n    padding-bottom: 104px;\n    padding-right: 114px;\n    padding-left: 113px;\n  }\n`;\n\nexport const Container = styled.div`\n  border: 0.8px solid #3e85f3;\n  border-radius: 16px;\n  padding-right: 14px;\n  padding-left: 14px;\n  padding-bottom: 40px;\n  @media ${device.tablet} {\n    padding-bottom: 32px;\n    padding-right: 32px;\n    padding-left: 32px;\n  }\n  @media ${device.desktop} {\n    padding-bottom: 40px;\n    padding-right: 40px;\n    padding-left: 40px;\n  }\n`;\n\nexport const Title = styled.p`\n  font-family: 'Inter', sans-serif;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 21px;\n  letter-spacing: 0em;\n  color: #343434;\n\n  padding-top: 40px;\n  margin-bottom: 20px;\n  @media ${device.tablet} {\n    padding-top: 32px;\n  }\n\n  @media ${device.desktop} {\n    padding-top: 40px;\n  }\n`;","import axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { format } from 'date-fns';\nimport { useMediaQuery } from '@mui/material';\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  ResponsiveContainer,\n  LabelList,\n} from 'recharts';\n\nimport { Schedule, Container, Title } from './StatisticsChart.styled';\n\nconst Chart = ({ firstDayCurrentMonth, _ }) => {\n  const [data, setData] = useState(null);\n  const isMobile = useMediaQuery('(max-width: 768px)');\n\n  const token = useSelector(state => state.auth.token);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(\n          `statistics?date=${format(firstDayCurrentMonth, 'yyyy-MM-dd')}`,\n          {\n            headers: {\n              Authorization: `Bearer ${token}`,\n            },\n          }\n        );\n        setData(response.data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchData();\n  }, [firstDayCurrentMonth, token]);\n\n  if (!data) {\n    return null;\n  }\n  const { todo, inProgres, done } = data;\n\n  const chartData = [\n    {\n      name: 'Todo',\n      day: todo.forDay.quantity,\n      dayPercentage: todo.forDay.percents,\n      month: todo.forMonth.quantity,\n      monthPercentage: todo.forMonth.percents,\n    },\n    {\n      name: 'In Progress',\n      day: inProgres.forDay.quantity,\n      dayPercentage: inProgres.forDay.percents,\n      month: inProgres.forMonth.quantity,\n      monthPercentage: inProgres.forMonth.percents,\n    },\n    {\n      name: 'Done',\n      day: done.forDay.quantity,\n      dayPercentage: done.forDay.percents,\n      month: done.forMonth.quantity,\n      monthPercentage: done.forMonth.percents,\n    },\n  ];\n\n  const Meaning = ({ x, y, width, value }) => (\n    <g transform={`translate(${x + width / 2},${y + 4})`}>\n      <text\n        x={2}\n        y={3}\n        dy={0}\n        textAnchor='middle'\n        fill='#343434'\n        fontSize={isMobile ? 12 : 16}\n        fontWeight={400}\n      >\n        {!isNaN(value) && value !== 0 ? `${value.toFixed(0)}%` : ''}\n      </text>\n    </g>\n  );\n\n  const generateLinearGradient = (id, color, opacity) => (\n    <linearGradient id={id} x1='0' y1='0' x2='0' y2='1'>\n      <stop offset='0%' stopColor={color} stopOpacity={opacity} />\n      <stop offset='100%' stopColor={color} stopOpacity={1} />\n    </linearGradient>\n  );\n\n  return (\n    <Schedule>\n      <Container>\n        <Title>Tasks</Title>\n        <ResponsiveContainer width='100%' height={266}>\n          <BarChart\n            data={chartData}\n            barGap={isMobile ? 8 : 14}\n            barSize={isMobile ? 22 : 27}\n          >\n            <CartesianGrid\n              stroke='#e3f3ff'\n              strokeWidth={1}\n              strokeDasharray='none'\n              vertical={false}\n            />\n            <XAxis\n              dataKey='name'\n              tick={{ fontSize: isMobile ? 12 : 16, fill: '#343434' }}\n              tickLine={false}\n              tickMargin={10}\n              axisLine={false}\n            />\n            <YAxis\n              domain={[0, 10]}\n              tickCount={11}\n              tick={{ fill: '#343434' }}\n              allowDataOverflow={true}\n              scale='linear'\n              axisLine={false}\n              tickLine={false}\n              tickMargin={30}\n            />\n            <Bar\n              dataKey='day'\n              fill='url(#schedule-day)'\n              radius={[0, 0, 10, 10]}\n            >\n              <LabelList\n                dataKey='dayPercentage'\n                position='top'\n                content={<Meaning />}\n                fill='#343434'\n              />\n            </Bar>\n            <Bar\n              dataKey='month'\n              fill='url(#schedule-month)'\n              radius={[0, 0, 10, 10]}\n            >\n              <LabelList\n                dataKey='monthPercentage'\n                position='top'\n                content={<Meaning />}\n                fill='#343434'\n              />\n            </Bar>\n            <defs>\n              {generateLinearGradient('schedule-day', '#ffd2dd', 0)}\n              {generateLinearGradient('schedule-month', '#3e85f3', 0)}\n            </defs>\n            <CartesianGrid vertical={false} />\n          </BarChart>\n        </ResponsiveContainer>\n      </Container>\n    </Schedule>\n  );\n};\n\nexport default Chart;","import styled from 'styled-components';\nimport { FaChevronLeft, FaChevronRight } from 'react-icons/fa';\n\nexport const device = {\n  tablet: `(min-width: 768px)`,\n  desktop: `(min-width: 1440px)`,\n};\n\nexport const General = styled.div`\n  margin: 0 auto;\n  max-width: 100%;\n  height: 100%;\n  position: relative;\n  background: #ffffff;\n  border-radius: 16px;\n  background: #ffffff;\n`;\n\nexport const Option = styled.div`\n  padding-top: 28px;\n  padding-right: 14px;\n  padding-left: 14px;\n  @media ${device.tablet} {\n    padding-top: 132px;\n    padding-right: 64px;\n    padding-left: 64px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n  @media ${device.desktop} {\n    padding-top: 134px;\n    padding-right: 154px;\n    padding-left: 153px;\n  }\n`;\n\nexport const Buttons = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  @media ${device.tablet} {\n    justify-content: flex-start;\n  }\n`;\n\nexport const ButtonData = styled('button')`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 190px;\n  height: 30px;\n  color: #ffffff;\n  background: #3e85f3;\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n  font-family: 'Inter', sans-serif;\n  font-size: 14px;\n  font-weight: 700;\n  line-height: 1.28;\n  letter-spacing: 0em;\n  text-transform: uppercase;\n  @media ${device.tablet} {\n    width: 190px;\n    height: 34px;\n    margin-right: 8px;\n  }\n`;\n\nexport const ButtonsIcon = styled.div`\n  display: flex;\n`;\n\nexport const ButtonLast = styled.button`\n  border-radius: 8px 0 0 8px;\n  border: 1px solid rgba(220, 227, 229, 0.8);\n  fill: white;\n  overflow: hidden;\n  cursor: pointer;\n  padding: 8px, 12px, 8px, 12px;\n  background-color: #ffffff;\n\n  width: 36px;\n  height: 30px;\n  margin: 0;\n  :hover {\n    transform: scale(1.2);\n  }\n  @media ${device.tablet} {\n    width: 38px;\n    height: 34px;\n  }\n`;\n\nexport const IconLast = styled(FaChevronLeft)`\n  transition: fill 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  fill: #111111;\n\n  :hover {\n    transform: scale(1.2);\n    fill: #3e85f3;\n  }\n`;\n\nexport const ButtonNext = styled.button`\n  border-radius: 0 8px 8px 0;\n  border: 1px solid rgba(220, 227, 229, 0.8);\n  overflow: hidden;\n  cursor: pointer;\n  padding: 8px, 12px, 8px, 12px;\n  background-color: #ffffff;\n  width: 36px;\n  height: 30px;\n  margin: 0;\n\n  :hover {\n    transform: scale(1.2);\n  }\n  @media ${device.tablet} {\n    width: 38px;\n    height: 34px;\n  }\n`;\n\nexport const IconNext = styled(FaChevronRight)`\n  transition: fill 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  fill: #111111;\n\n  :hover {\n    transform: scale(1.2);\n    fill: #3e85f3;\n  }\n`;\n\nexport const List = styled.ul`\n  margin-top: 20px;\n  display: flex;\n  @media ${device.tablet} {\n    margin-top: 0px;\n  }\n`;\n\nexport const Item = styled.li`\n  font-family: 'Inter', sans-serif;\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 18px;\n  letter-spacing: 0em;\n  color: #343434;\n  text-align: left;\n  &:not(:last-child) {\n    margin-right: 15px;\n  }\n  @media ${device.tablet} {\n    font-size: 16px;\n    &:not(:last-child) {\n      margin-right: 20px;\n    }\n  }\n`;\n\nexport const Icon = styled.svg`\n  width: 8px;\n  height: 8px;\n  margin-right: 8px;\n`;","import { useState } from 'react';\nimport { format, parseISO, startOfToday, parse } from 'date-fns';\nimport Icons from '../../images/Statistics/Icons/icon-Ellipse.svg';\nimport { CalendarTable } from '../CalendarTable/CalendarTable';\nimport Chart from './StatisticsChart';\nimport {\n  General,\n  Option,\n  Buttons,\n  ButtonData,\n  ButtonsIcon,\n  ButtonLast,\n  IconLast,\n  ButtonNext,\n  IconNext,\n  List,\n  Item,\n  Icon,\n} from './Statistics.styled';\n\nconst Statistics = () => {\n  const today = startOfToday();\n  const [firstDayCurrentMonth, setFirstDayCurrentMonth] = useState(\n    parseISO(format(today, 'yyyy-MM-dd'))\n  );\n\n  const [showCalendar, setShowCalendar] = useState(false);\n\n  const handleDateChange = newDate => {\n    const parsedDate = parse(newDate, 'dd MMMM yyyy', new Date());\n    setFirstDayCurrentMonth(parsedDate);\n    setShowCalendar(false);\n  };\n\n  const handleLastDay = () => {\n    const newDate = new Date(firstDayCurrentMonth);\n    newDate.setDate(newDate.getDate() - 1);\n    setFirstDayCurrentMonth(newDate);\n  };\n\n  const handleNextDay = () => {\n    const newDate = new Date(firstDayCurrentMonth);\n    newDate.setDate(newDate.getDate() + 1);\n    setFirstDayCurrentMonth(newDate);\n  };\n\n  const miniCalendar = () => {\n    setShowCalendar(prevState => !prevState);\n  };\n\n  return (\n    <General>\n      <Option>\n        <Buttons>\n          <ButtonData type='button' onClick={miniCalendar}>\n            {format(firstDayCurrentMonth, 'dd MMMM yyyy')}\n          </ButtonData>\n          <ButtonsIcon>\n            <ButtonLast type='button' onClick={handleLastDay}>\n              <IconLast fill='#ffffff' />\n            </ButtonLast>\n            <ButtonNext type='button' onClick={handleNextDay}>\n              <IconNext fill='#ffffff' />\n            </ButtonNext>\n          </ButtonsIcon>\n        </Buttons>\n        <List>\n          <Item>\n            <Icon>\n              <use href={`${Icons}#icon-Ellipse-3`}></use>\n            </Icon>\n            By Day\n          </Item>\n          <Item>\n            <Icon>\n              <use href={`${Icons}#icon-Ellipse-4`}></use>\n            </Icon>\n            By Month\n          </Item>\n        </List>\n      </Option>\n      <Chart\n        firstDayCurrentMonth={firstDayCurrentMonth}\n        setFirstDayCurrentMonth={setFirstDayCurrentMonth}\n      />\n      {showCalendar && <CalendarTable onDateChange={handleDateChange} />}\n    </General>\n  );\n};\n\nexport default Statistics;","import Statistics from '../../components/Statistics/Statistics';\n\nconst StatisticsPage = () => (\n  <div>\n    <Statistics />\n  </div>\n);\n\nexport default StatisticsPage;"],"names":["device","Schedule","styled","_templateObject","_taggedTemplateLiteral","Container","_templateObject2","Title","_templateObject3","_ref","firstDayCurrentMonth","_useState","_","useState","_useState2","_slicedToArray","data","setData","isMobile","useMediaQuery","token","useSelector","state","auth","useEffect","fetchData","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","axios","concat","format","headers","Authorization","sent","t0","console","log","stop","apply","arguments","todo","inProgres","done","chartData","name","day","forDay","quantity","dayPercentage","percents","month","forMonth","monthPercentage","Meaning","_ref3","x","y","width","value","_jsx","transform","children","dy","textAnchor","fill","fontSize","fontWeight","isNaN","toFixed","generateLinearGradient","id","color","opacity","_jsxs","x1","y1","x2","y2","offset","stopColor","stopOpacity","ResponsiveContainer","height","BarChart","barGap","barSize","CartesianGrid","stroke","strokeWidth","strokeDasharray","vertical","XAxis","dataKey","tick","tickLine","tickMargin","axisLine","YAxis","domain","tickCount","allowDataOverflow","scale","Bar","radius","LabelList","position","content","General","Option","Buttons","ButtonData","_templateObject4","ButtonsIcon","_templateObject5","ButtonLast","_templateObject6","IconLast","FaChevronLeft","_templateObject7","ButtonNext","_templateObject8","IconNext","FaChevronRight","_templateObject9","List","_templateObject10","Item","_templateObject11","Icon","_templateObject12","today","startOfToday","parseISO","setFirstDayCurrentMonth","_useState3","_useState4","showCalendar","setShowCalendar","type","onClick","prevState","newDate","Date","setDate","getDate","href","Icons","Chart","CalendarTable","onDateChange","parsedDate","parse","Statistics"],"sourceRoot":""}