{"version":3,"file":"static/js/643.16b66e30.chunk.js","mappings":"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","sources":["components/CalendarTable/CalendarTable.styled.jsx","components/CalendarTable/CalendarTable.jsx","pages/CalendarPage/CalendarPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Table = styled.div`\n  border: 1px solid ${({ theme }) => theme.strokeTransparant};\n  border-radius: 8px;\n\n  overflow: hidden;\n\n  @media screen and (min-width: 768px) {\n    border-color: ${({ theme }) => theme.strokeTransparant};\n  }\n`;\n\nexport const TableRow = styled.div`\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  min-height: 94px;\n\n  background-color: ${({ theme }) => theme.tableBg};\n\n  &:not(:last-child) {\n    border-bottom-color: ${({ theme }) => theme.strokeTransparant};\n    border-bottom-width: 1px;\n    border-bottom-style: solid;\n  }\n\n  @media screen and (min-width: 768px) {\n    min-height: 144px;\n\n    &:not(:last-child) {\n      border-bottom-color: ${({ theme }) => theme.strokeTransparant};\n    }\n  }\n\n  @media screen and (min-width: 1440px) {\n    min-height: 125px;\n  }\n`;\n\nexport const TableCell = styled.div`\n  position: relative;\n\n  padding-left: 2px;\n  padding-right: 2px;\n  padding-top: 48px;\n  padding-bottom: 2px;\n\n  background-color: ${({ theme }) => theme.tableBg};\n\n  overflow: hidden;\n\n  cursor: ${({ $isEmpty }) => ($isEmpty ? 'default' : 'pointer')};\n\n  &:not(:first-of-type) {\n    border-left-color: ${({ theme }) => theme.strokeTransparant};\n    border-left-width: 1px;\n    border-left-style: solid;\n  }\n\n  &:hover {\n    & .disabled-hover:not(:hover) + .container {\n      background-color: ${({ theme }) => theme.accentBlueLight};\n\n      & .value {\n        color: ${({ theme }) => theme.tableIcon};\n      }\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    padding-left: 4px;\n    padding-right: 4px;\n    padding-top: 58px;\n    padding-bottom: 4px;\n\n    &:not(:first-of-type) {\n      border-left-color: ${({ theme }) => theme.strokeTransparant};\n    }\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding-left: 8px;\n    padding-right: 8px;\n    padding-bottom: 8px;\n  }\n`;\n\nexport const DayOfMonthContainer = styled.div`\n  position: absolute;\n  top: 8px;\n  right: 4px;\n\n  padding: 4px 6px;\n\n  background-color: ${({ theme, $isCurrentDate }) =>\n    $isCurrentDate ? theme.accentBlue : 'transparent'};\n  border-radius: 6px;\n\n  cursor: pointer;\n\n  transition: background-color\n    ${({ theme }) => `${theme.transitions.time} ${theme.transitions.cubic}`};\n\n  @media screen and (min-width: 768px) {\n    top: 14px;\n    right: 14px;\n\n    padding: 4px 8px;\n  }\n`;\n\nexport const DayOfMonth = styled.p`\n  margin: 0;\n\n  font-size: 12px;\n  font-weight: 700;\n  line-height: 1.16;\n  text-transform: uppercase;\n  color: ${({ theme, $isCurrentDate }) =>\n    $isCurrentDate ? theme.white : theme.textPrimaryLight};\n\n  user-select: none;\n\n  transition: color\n    ${({ theme }) => `${theme.transitions.time} ${theme.transitions.cubic}`};\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    line-height: 1.125;\n  }\n`;\n\nconst Button = styled.button`\n  padding-top: 2px;\n  padding-right: 2px;\n  padding-bottom: 2px;\n  padding-left: 6px;\n  width: 100%;\n\n  font-size: 10px;\n  font-weight: 700;\n  line-height: 1.4;\n  white-space: nowrap;\n  text-align: start;\n\n  text-overflow: ellipsis;\n  overflow: hidden;\n  cursor: pointer;\n\n  border-radius: 8px;\n  border-width: 2px;\n  border-style: solid;\n  border-color: transparent;\n\n  user-select: none;\n  outline: none;\n\n  transition: border-color\n    ${({ theme }) => `${theme.transitions.time} ${theme.transitions.cubic}`};\n\n  @media screen and (min-width: 768px) {\n    padding: 1px 5px;\n\n    font-size: 14px;\n    line-height: 1.28;\n\n    border-width: 3px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding: 1px 7px;\n\n    border-width: 3px;\n  }\n`;\n\nexport const MiniCard = styled(Button)`\n  &.b-mb:not(:last-child) {\n    margin-bottom: 4px;\n  }\n\n  color: ${({ theme, $priority }) => {\n    switch ($priority) {\n      case 'low':\n        return theme.accentPrimary;\n      case 'medium':\n        return theme.accentYellow;\n      case 'high':\n        return theme.accentRed;\n      default:\n        throw new Error('Invalid status');\n    }\n  }};\n\n  background: ${({ theme, $priority }) => {\n    switch ($priority) {\n      case 'low':\n        return theme.accentBlueLight;\n      case 'medium':\n        return theme.accentYellowLight;\n      case 'high':\n        return theme.accentRedLight;\n      default:\n        throw new Error('Invalid status');\n    }\n  }};\n\n  &:not(:last-child) {\n    margin-bottom: 2px;\n  }\n\n  &:hover,\n  &:focus {\n    border-color: ${({ theme, $priority }) => {\n      switch ($priority) {\n        case 'low':\n          return theme.accentPrimary;\n        case 'medium':\n          return theme.accentYellow;\n        case 'high':\n          return theme.accentRed;\n        default:\n          throw new Error('Invalid status');\n      }\n    }};\n  }\n\n  @media screen and (min-width: 768px) {\n    &:not(:last-child) {\n      margin-bottom: 4px;\n    }\n  }\n\n  @media screen and (min-width: 1440px) {\n    &:not(:last-child) {\n      margin-bottom: 8px;\n    }\n  }\n`;\n\nexport const MoreButton = styled(Button)`\n  margin-top: 2px;\n\n  color: #333333;\n\n  background: #e5e5e5;\n\n  &:hover,\n  &:focus {\n    border-color: #333333;\n  }\n\n  @media screen and (min-width: 768px) {\n    margin-top: 4px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    margin-top: 8px;\n  }\n`;\n","import { useEffect, useMemo, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { format, getMonth, getYear } from 'date-fns';\nimport Menu from '@mui/material/Menu';\n\nimport { getTasksByMonth } from 'redux/tasks/operations';\nimport { selectTasks } from 'redux/selectors';\nimport { useResizeScreen } from 'hooks';\n\nimport { TaskModal } from 'components/TasksComponents';\n\nimport * as S from './CalendarTable.styled';\nimport { clearTasks } from 'redux/tasks/tasksSlice';\nimport { useTheme } from '@mui/material';\n\nexport const DropDownTaskList = ({ tasks, onOpenTaskModal }) => {\n  const [anchorEl, setAnchorEl] = useState(null);\n  const open = Boolean(anchorEl);\n  const { isMobile } = useResizeScreen();\n  const theme = useTheme();\n\n  const menuStyles = (() => {\n    if (isMobile) {\n      return { maxWidth: 115, padding: '7px' };\n    } else {\n      return { maxWidth: 147, padding: '11px 15px' };\n    }\n  })();\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div>\n      <S.MoreButton\n        type=\"button\"\n        id=\"more-button\"\n        aria-controls={open ? 'more-menu' : undefined}\n        aria-haspopup=\"true\"\n        aria-expanded={open ? 'true' : undefined}\n        onClick={handleClick}\n      >\n        More\n      </S.MoreButton>\n      <Menu\n        id=\"more-menu\"\n        anchorEl={anchorEl}\n        open={open}\n        onClose={handleClose}\n        MenuListProps={{\n          'aria-labelledby': 'more-button',\n        }}\n        sx={{\n          '.MuiPaper-root': {\n            ...menuStyles,\n            borderRadius: '8px',\n            backgroundColor: theme.bgPrimary,\n            border: `1px solid ${theme.borderDropDownMenu}`,\n          },\n          '& .MuiList-root': { padding: 0 },\n        }}\n      >\n        {tasks.map(task => (\n          <S.MiniCard\n            key={task._id}\n            className=\"b-mb\"\n            type=\"button\"\n            $priority={task.priority}\n            onClick={onOpenTaskModal(task)}\n          >\n            {task.title}\n          </S.MiniCard>\n        ))}\n      </Menu>\n    </div>\n  );\n};\n\nexport const CalendarTable = () => {\n  const { month } = useParams();\n  const dispatch = useDispatch();\n  const tasks = useSelector(selectTasks);\n\n  const [date, setDate] = useState(new Date(month));\n  const [isOpenTaskModal, setIsOpenTaskModal] = useState(false);\n  const [choseTask, setChoseTask] = useState(null);\n\n  const navigate = useNavigate();\n\n  const { isMobile, isTablet, isDesktop } = useResizeScreen();\n\n  useEffect(() => {\n    setDate(new Date(month));\n    dispatch(getTasksByMonth(month));\n\n    return () => {\n      dispatch(clearTasks());\n    };\n  }, [month, dispatch]);\n\n  const tableData = useMemo(() => {\n    const year = getYear(date);\n    const month = getMonth(date);\n    const currentDate = format(new Date(), 'yyyy-MM-dd');\n    const daysInMonth = new Date(year, month + 1, 0).getDate();\n    let firstDayOfWeek = new Date(year, month, 1).getDay();\n    let lastDayOfWeek = new Date(year, month, daysInMonth).getDay();\n\n    firstDayOfWeek = firstDayOfWeek === 0 ? 7 : firstDayOfWeek;\n    lastDayOfWeek = lastDayOfWeek === 0 ? 7 : lastDayOfWeek;\n\n    const tableCellData = [];\n\n    for (let i = 1; i < firstDayOfWeek; i++) {\n      tableCellData.push({ dayOfMonth: null, tasks: [] });\n    }\n\n    for (let i = 1; i <= daysInMonth; i++) {\n      const formattedDate = format(new Date(year, month, i), 'yyyy-MM-dd');\n\n      const rowData = {\n        dayOfMonth: i,\n        fullDate: formattedDate,\n        isCurrentDate: currentDate === formattedDate,\n        tasks: tasks.filter(({ date }) => date === formattedDate),\n      };\n\n      tableCellData.push(rowData);\n    }\n\n    for (let i = lastDayOfWeek; i < 7; i++) {\n      tableCellData.push({ dayOfMonth: null, tasks: [] });\n    }\n\n    const tableData = [];\n\n    for (let i = 0; i < tableCellData.length; i += 7) {\n      tableData.push(tableCellData.slice(i, i + 7));\n    }\n\n    return tableData;\n  }, [date, tasks]);\n\n  const countNumberOfDisplayedTasks = tasks => {\n    if (isMobile) {\n      return tasks.length > 2 ? 1 : 2;\n    } else if (isTablet) {\n      return tasks.length > 3 ? 2 : 3;\n    } else {\n      return tasks.length > 2 ? 1 : 2;\n    }\n  };\n\n  const handleChooseDayCell = choseDate => e => {\n    if (e.target !== e.currentTarget) return;\n\n    navigate(`/calendar/day/${choseDate}`);\n  };\n\n  const handleChooseDay = choseDate => () => {\n    navigate(`/calendar/day/${choseDate}`);\n  };\n\n  const handleOpenTaskModal = task => () => {\n    setChoseTask(task);\n    setIsOpenTaskModal(true);\n  };\n\n  const handleCloseTaskModal = () => {\n    setIsOpenTaskModal(false);\n    setChoseTask(null);\n  };\n\n  return (\n    <S.Table>\n      {tableData.map((tableRowData, idx) => (\n        <S.TableRow key={idx}>\n          {tableRowData.map(\n            ({ dayOfMonth, fullDate, tasks, isCurrentDate }, idx) => {\n              const numberOfDisplayedTasks = countNumberOfDisplayedTasks(tasks);\n\n              const isEmptyCell = dayOfMonth === null;\n\n              return (\n                <S.TableCell\n                  key={idx}\n                  $isEmpty={isEmptyCell}\n                  onClick={\n                    isEmptyCell ? () => {} : handleChooseDayCell(fullDate)\n                  }\n                >\n                  <div className=\"disabled-hover\">\n                    <div>\n                      {tasks.slice(0, numberOfDisplayedTasks).map(task => (\n                        <S.MiniCard\n                          type=\"button\"\n                          key={task._id}\n                          $priority={task.priority}\n                          onClick={handleOpenTaskModal(task)}\n                        >\n                          {task.title}\n                        </S.MiniCard>\n                      ))}\n                    </div>\n                    {((tasks.length > 2 && isMobile) ||\n                      (tasks.length > 3 && isTablet) ||\n                      (tasks.length > 2 && isDesktop)) && (\n                      <DropDownTaskList\n                        tasks={tasks.slice(numberOfDisplayedTasks)}\n                        onOpenTaskModal={handleOpenTaskModal}\n                      />\n                    )}\n                  </div>\n                  {dayOfMonth && (\n                    <S.DayOfMonthContainer\n                      className=\"container\"\n                      $isCurrentDate={isCurrentDate}\n                      onClick={handleChooseDay(fullDate)}\n                    >\n                      <S.DayOfMonth\n                        className=\"value\"\n                        $isCurrentDate={isCurrentDate}\n                      >\n                        {dayOfMonth}\n                      </S.DayOfMonth>\n                    </S.DayOfMonthContainer>\n                  )}\n                </S.TableCell>\n              );\n            }\n          )}\n        </S.TableRow>\n      ))}\n\n      {choseTask && (\n        <TaskModal\n          isOpenModal={isOpenTaskModal}\n          onCloseModal={handleCloseTaskModal}\n          task={choseTask}\n        />\n      )}\n    </S.Table>\n  );\n};\n","import { CalendarTable } from 'components/CalendarTable';\n\nconst CalendarPage = () => <CalendarTable />;\n\nexport default CalendarPage;\n"],"names":["Table","styled","_templateObject","_taggedTemplateLiteral","_ref","theme","strokeTransparant","_ref2","TableRow","_templateObject2","_ref3","tableBg","_ref4","_ref5","TableCell","_templateObject3","_ref6","_ref7","$isEmpty","_ref8","_ref9","accentBlueLight","_ref10","tableIcon","_ref11","DayOfMonthContainer","_templateObject4","_ref12","$isCurrentDate","accentBlue","_ref13","concat","transitions","time","cubic","DayOfMonth","_templateObject5","_ref14","white","textPrimaryLight","_ref15","Button","_templateObject6","_ref16","MiniCard","_templateObject7","_ref17","$priority","accentPrimary","accentYellow","accentRed","Error","_ref18","accentYellowLight","accentRedLight","_ref19","MoreButton","_templateObject8","DropDownTaskList","tasks","onOpenTaskModal","_useState","useState","_useState2","_slicedToArray","anchorEl","setAnchorEl","open","Boolean","isMobile","useResizeScreen","useTheme","menuStyles","maxWidth","padding","_jsxs","children","_jsx","S","type","id","undefined","onClick","event","currentTarget","Menu","onClose","MenuListProps","sx","_objectSpread","borderRadius","backgroundColor","bgPrimary","border","borderDropDownMenu","map","task","className","priority","title","_id","CalendarTable","month","useParams","dispatch","useDispatch","useSelector","selectTasks","_useState3","Date","_useState4","date","setDate","_useState5","_useState6","isOpenTaskModal","setIsOpenTaskModal","_useState7","_useState8","choseTask","setChoseTask","navigate","useNavigate","_useResizeScreen2","isTablet","isDesktop","useEffect","getTasksByMonth","clearTasks","tableData","useMemo","year","getYear","getMonth","currentDate","format","daysInMonth","getDate","firstDayOfWeek","getDay","lastDayOfWeek","tableCellData","i","push","dayOfMonth","_loop","formattedDate","rowData","fullDate","isCurrentDate","filter","length","slice","handleChooseDay","choseDate","handleOpenTaskModal","tableRowData","idx","numberOfDisplayedTasks","countNumberOfDisplayedTasks","isEmptyCell","e","target","TaskModal","isOpenModal","onCloseModal"],"sourceRoot":""}