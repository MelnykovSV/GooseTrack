{"version":3,"file":"static/js/490.43c8f88a.chunk.js","mappings":"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","sources":["components/StatisticsComponents/CustomCalendar/CustomCalendar.styled.jsx","components/StatisticsComponents/Statistics/Statistics.styled.jsx","components/StatisticsComponents/Statistics/Statistics.jsx","components/StatisticsComponents/StatisticsChart/StatisticsChart.styled.jsx","components/StatisticsComponents/StatisticsChart/StatisticsChart.jsx","pages/StatisticsPage/StatisticsPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nimport 'react-calendar/dist/Calendar.css';\n\nexport const MiniCalendar = styled.div`\n  position: absolute;\n  top: 66px;\n  left: 14px;\n  z-index: 2;\n\n  @media screen and (min-width: 768px) {\n    top: 174px;\n    left: 64px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    top: 176px;\n    left: 153px;\n  }\n\n  & .react-calendar {\n    width: 235px;\n    max-width: 100%;\n\n    font-family: 'Inter';\n    line-height: 1.125em;\n\n    border-radius: 8px;\n\n    color: ${({ theme }) => theme.white};\n    background-color: ${({ theme }) => theme.accentPrimary};\n  }\n\n  & .react-calendar--doubleView {\n    width: 700px;\n  }\n\n  & .react-calendar--doubleView .react-calendar__viewContainer {\n    display: flex;\n    margin: -0.5em;\n  }\n\n  & .react-calendar__year-view {\n    padding: 0 18px 18px;\n  }\n\n  & .react-calendar--doubleView .react-calendar__viewContainer > * {\n    width: 50%;\n    margin: 0.5em;\n  }\n\n  & .react-calendar,\n  & .react-calendar *,\n  & .react-calendar *:before,\n  & .react-calendar *:after {\n    -moz-box-sizing: border-box;\n    -webkit-box-sizing: border-box;\n    box-sizing: border-box;\n  }\n\n  & .react-calendar button {\n    margin: 0;\n    border: 0;\n    outline: none;\n\n    transition: color 300ms ease, background-color 350ms ease;\n\n    &:enabled:hover {\n      cursor: pointer;\n    }\n  }\n\n  & .react-calendar__navigation {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    margin-bottom: 8px;\n    padding: 18px 18px 0;\n\n    & button {\n      min-width: 30px;\n    }\n\n    & button:enabled:hover,\n    button:enabled:focus {\n      background: none;\n    }\n  }\n\n  & .react-calendar__navigation__label {\n    margin: 0;\n    padding: 0;\n\n    font-family: Inter;\n    font-size: 16px;\n    font-weight: 600;\n    letter-spacing: -0.32px;\n\n    color: ${({ theme }) => theme.white};\n  }\n\n  & .react-calendar__navigation__arrow {\n    padding: 0;\n    margin: 0;\n\n    color: ${({ theme }) => theme.white};\n\n    & svg {\n      width: 12px;\n      height: 12px;\n    }\n  }\n\n  & .react-calendar__navigation__next-button {\n    padding-left: 10px;\n    padding-top: 10px;\n    padding-bottom: 10px;\n  }\n\n  & .react-calendar__navigation__prev-button {\n    padding-right: 10px;\n    padding-top: 10px;\n    padding-bottom: 10px;\n  }\n\n  & .react-calendar__year-view__months__month,\n  .react-calendar__decade-view__years__year,\n  .react-calendar__century-view__decades__decade {\n    color: ${({ theme }) => theme.white};\n    padding: 0;\n  }\n\n  & .react-calendar__month-view__days {\n    margin-top: 12px;\n    padding: 0 18px 18px;\n  }\n\n  & .react-calendar__month-view__weekdays {\n    padding: 0 18px;\n\n    text-align: center;\n    text-transform: uppercase;\n    font-weight: 500;\n    font-size: 14px;\n\n    border-bottom: 1px solid ${({ theme }) => theme.calendarInactive};\n  }\n\n  & .react-calendar__month-view__weekdays__weekday {\n    color: ${({ theme }) => theme.calendarWeekday};\n\n    & abbr[title] {\n      text-decoration: none;\n    }\n  }\n\n  & .react-calendar__month-view__weekNumbers .react-calendar__tile {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    font-size: 14px;\n    font-weight: 400;\n\n    color: ${({ theme }) => theme.white};\n  }\n\n  & .react-calendar__month-view__days__day,\n  .react-calendar__month-view__days__day--weekend {\n    color: ${({ theme }) => theme.white};\n\n    &:enabled:hover {\n      color: ${({ theme }) => theme.accentPrimary};\n    }\n  }\n\n  & .react-calendar__month-view__days__day--neighboringMonth {\n    color: ${({ theme }) => theme.calendarInactive};\n  }\n\n  & .react-calendar__tile {\n    max-width: 100%;\n    padding: 6px 0;\n\n    background: none;\n    text-align: center;\n    font-weight: 400;\n    line-height: 16px;\n\n    border-radius: 50%;\n\n    &:disabled {\n      color: ${({ theme }) => theme.calendarInactive};\n    }\n\n    &:enabled:focus,\n    :enabled:hover {\n      background-color: ${({ theme }) => theme.white};\n    }\n  }\n\n  & .react-calendar__tile--now,\n  .react-calendar__tile--hasActive {\n    &:enabled:focus,\n    :enabled:hover {\n      color: ${({ theme }) => theme.accentPrimary};\n      background-color: ${({ theme }) => theme.white};\n    }\n  }\n\n  & .react-calendar__tile--active {\n    color: ${({ theme }) => theme.accentPrimary};\n    background-color: ${({ theme }) => theme.white};\n\n    &:enabled:focus,\n    :enabled:hover {\n      color: ${({ theme }) => theme.accentPrimary};\n      background-color: ${({ theme }) => theme.white};\n    }\n  }\n\n  & .react-calendar--selectRange .react-calendar__tile--hover {\n    color: ${({ theme }) => theme.accentPrimary};\n    background-color: ${({ theme }) => theme.white};\n  }\n`;\n","import styled from '@emotion/styled';\nimport { FaChevronLeft, FaChevronRight } from 'react-icons/fa';\nimport Button from 'components/Button/Button';\n\nexport const device = {\n  tablet: `(min-width: 768px)`,\n  desktop: `(min-width: 1440px)`,\n};\n\nexport const General = styled.div`\n  position: relative;\n  margin: 0 auto;\n  padding: 28px 14px 135px;\n\n  width: 335px;\n  max-width: 100%;\n\n  border-radius: 16px;\n\n  background-color: ${({ theme }) => theme.bgStatistics};\n\n  @media ${device.tablet} {\n    width: 704px;\n    padding: 132px 32px 224px;\n  }\n\n  @media ${device.desktop} {\n    width: 1087px;\n    padding: 134px 114px 104px;\n  }\n\n  .react-datepicker__triangle {\n    display: none;\n  }\n\n  .react-datepicker-wrapper {\n    display: block;\n  }\n  .react-datepicker__day {\n    color: #fff;\n  }\n\n  .react-datepicker__day:hover {\n    background-color: #fff;\n    color: #3e85f3;\n    border-radius: 100%;\n  }\n\n  .react-datepicker__day--weekend {\n    color: rgba(255, 255, 255, 0.3);\n  }\n\n  .react-datepicker__day--selected {\n    color: #3e85f3;\n    background-color: #fff;\n    border-radius: 100%;\n  }\n\n  .react-datepicker {\n    background-color: #3e85f3;\n  }\n\n  .react-datepicker__header {\n    background-color: #3e85f3;\n    color: #fff;\n    border: none;\n  }\n\n  .react-datepicker__current-month {\n    color: #fff;\n  }\n\n  .react-datepicker__navigation {\n    color: #fff;\n  }\n\n  .react-datepicker__day-name {\n    color: #fff;\n  }\n\n  .react-datepicker {\n    border-radius: 10px;\n  }\n\n  /* .react-datepicker__day--weekend {\n  color: rgba(255, 255, 255, 0.3);\n} */\n\n  .react-datepicker__day--outside-month {\n    color: transparent;\n  }\n  .react-datepicker__navigation--previous {\n    left: 3px;\n    top: 8px;\n  }\n  .react-datepicker__navigation--next {\n    right: 3px;\n    top: 8px;\n  }\n\n  .react-datepicker__header {\n    height: 83px;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    color: white;\n\n    border-top-left-radius: 8px;\n    border-top-right-radius: 8px;\n    border: none;\n    position: relative;\n  }\n  .react-datepicker__day-names {\n    /* border-bottom: 1px solid ${({ theme }) => theme.calendarInactive}; */\n    :after {\n      content: '';\n      position: absolute;\n      width: 90%;\n      height: 1px;\n      left: 50%;\n      bottom: 0;\n      transform: translateX(-50%);\n      background-color: ${({ theme }) => theme.calendarInactive};\n    }\n  }\n\n  .react-datepicker__day-name {\n    color: #ffff;\n    font-family: inherit;\n    font-size: 16px;\n  }\n`;\n\nexport const Option = styled.div`\n  margin-bottom: 40px;\n\n  @media ${device.tablet} {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    margin-right: 32px;\n    margin-left: 32px;\n  }\n\n  @media ${device.desktop} {\n    margin-right: 40px;\n    margin-left: 40px;\n  }\n`;\n\nexport const Buttons = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  @media ${device.tablet} {\n    width: 259px;\n  }\n`;\n\nexport const ButtonData = styled(Button)`\n  width: 175px;\n  padding: 6px 12px;\n\n  font-weight: 700;\n  line-height: 1.28;\n  text-transform: uppercase;\n\n  @media ${device.tablet} {\n    padding-top: 8px;\n    padding-bottom: 8px;\n\n    font-size: 14px;\n    line-height: 1.28;\n  }\n`;\n\nexport const Arrows = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const Arrow = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  padding: 7px 10px;\n\n  border: 1px solid ${({ theme }) => theme.borderStatistics};\n  border-radius: ${props => (props.next ? '0 8px 8px 0' : '8px 0 0 8px;')};\n\n  color: ${({ theme }) => theme.textPrimaryLight};\n  background-color: ${({ theme }) => theme.bgStatistics};\n\n  cursor: pointer;\n\n  transition: fill 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover > svg {\n    transform: scale(1.2);\n    color: ${({ theme }) => theme.accentPrimary};\n  }\n\n  @media ${device.tablet} {\n    padding-top: 8px;\n    padding-bottom: 8px;\n  }\n`;\n\nexport const IconPrev = styled(FaChevronLeft)`\n  width: 16px;\n  height: 16px;\n\n  fill: currentColor;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n`;\n\nexport const IconNext = styled(FaChevronRight)`\n  width: 16px;\n  height: 16px;\n\n  fill: currentColor;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  align-items: center;\n  gap: 14px;\n\n  margin: 0;\n  padding: 0;\n  margin-top: 20px;\n\n  list-style-type: none;\n\n  @media ${device.tablet} {\n    margin-top: 0px;\n    gap: 20px;\n  }\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  font-family: Poppins;\n  font-weight: 400;\n  line-height: 1.28;\n\n  color: ${({ theme }) => theme.textPrimaryLight};\n\n  @media ${device.tablet} {\n    font-size: 16px;\n    line-height: 1.12;\n  }\n`;\n\nexport const Icon = styled.div`\n  width: 8px;\n  height: 8px;\n  margin-right: 8px;\n\n  border-radius: 50%;\n\n  background-color: ${({ theme, showFor }) =>\n    showFor === 'day' ? theme.accentPrimary : theme.accentRedLight};\n`;\n","import { useState, forwardRef } from 'react';\nimport DatePicker from 'react-datepicker';\n\nimport {\n  General,\n  Option,\n  Buttons,\n  ButtonData,\n  IconNext,\n  List,\n  Item,\n  Icon,\n  Arrow,\n  Arrows,\n  IconPrev,\n} from './Statistics.styled';\n// import { CustomCalendar, StatisticsChart } from '../index';\nimport { StatisticsChart } from '../index';\n\nconst Statistics = () => {\n  const [currentDayMonth, setCurrentDayMonth] = useState(new Date());\n\n  const Datepickerinput = forwardRef(({ value, onClick }, ref) => (\n    <ButtonData className=\"example-custom-input\" onClick={onClick} ref={ref}>\n      {value}\n    </ButtonData>\n  ));\n\n  const handleLastDay = () => {\n    const newDate = new Date(currentDayMonth);\n    newDate.setDate(newDate.getDate() - 1);\n    setCurrentDayMonth(newDate);\n  };\n\n  const handleNextDay = () => {\n    const newDate = new Date(currentDayMonth);\n    newDate.setDate(newDate.getDate() + 1);\n    setCurrentDayMonth(newDate);\n  };\n\n  return (\n    <General>\n      <Option>\n        <Buttons>\n          <DatePicker\n            selected={currentDayMonth}\n            onChange={date => setCurrentDayMonth(date)}\n            customInput={<Datepickerinput />}\n            dateFormat=\"dd MMMM yyyy\"\n            className=\"react-datepicker-wrapper\"\n            formatWeekDay={nameOfDay => nameOfDay.substring(0, 1)}\n            calendarStartDay={1}\n          />\n          <Arrows>\n            <Arrow prev type=\"button\" onClick={handleLastDay}>\n              <IconPrev />\n            </Arrow>\n            <Arrow next type=\"button\" onClick={handleNextDay}>\n              <IconNext />\n            </Arrow>\n          </Arrows>\n        </Buttons>\n        <List>\n          <Item>\n            <Icon showFor=\"month\" />\n            By Day\n          </Item>\n          <Item>\n            <Icon showFor=\"day\" />\n            By Month\n          </Item>\n        </List>\n      </Option>\n\n      <StatisticsChart\n        currentDayMonth={currentDayMonth}\n        setCurrentDayMonth={setCurrentDayMonth}\n      />\n    </General>\n  );\n};\n\nexport default Statistics;\n","import styled from '@emotion/styled';\n\nexport const device = {\n  tablet: `(min-width: 768px)`,\n  desktop: `(min-width: 1440px)`,\n};\n\nexport const Container = styled.div`\n  padding: 40px 14px;\n\n  border-radius: 20px;\n  border: 0.8px solid ${({ theme }) => theme.borderChart};\n\n  @media ${device.tablet} {\n    padding: 32px;\n\n    border-radius: 29px;\n  }\n\n  @media ${device.desktop} {\n    padding: 40px;\n  }\n`;\n\nexport const Title = styled.p`\n  margin-bottom: 8px;\n\n  font-weight: 600;\n  line-height: 1.5;\n\n  color: ${({ theme }) => theme.textPrimaryLight};\n\n  @media ${device.tablet} {\n    margin-bottom: 12px;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { format } from 'date-fns';\nimport { useMediaQuery, useTheme } from '@mui/material';\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  ResponsiveContainer,\n  LabelList,\n} from 'recharts';\n\nimport { Container, Title } from './StatisticsChart.styled';\nimport { getTasksByMonth } from 'redux/tasks/operations';\nimport { useDispatch } from 'react-redux';\n// import { getTasks, getMonth } from 'redux/tasks/tasksSlice';\nimport { getTasks } from 'redux/tasks/tasksSlice';\n\nconst StatisticsChart = ({ currentDayMonth, _ }) => {\n  const theme = useTheme();\n  const tasks = useSelector(getTasks);\n  // const month = useSelector(getMonth);\n  const isMobile = useMediaQuery('(max-width: 768px)');\n\n  const dispatch = useDispatch();\n\n  const currentMonth = format(currentDayMonth, 'yyyy-MM');\n  const currentDay = format(currentDayMonth, 'yyyy-MM-dd');\n\n  const [chartData, setChartData] = useState([]);\n\n  function processTaskData(currentDay) {\n    const totalMonthTasksNumber = tasks.length;\n\n    const todoMonthTasksNumber = tasks.filter(\n      task => task.status === 'todo'\n    ).length;\n    const inProgressMonthTasksNumber = tasks.filter(\n      task => task.status === 'inProgress'\n    ).length;\n    const doneMonthTasksNumber = tasks.filter(\n      task => task.status === 'done'\n    ).length;\n\n    const totalDayTasks = tasks.filter(task => task.date === currentDay);\n    const totalDayTasksNumber = totalDayTasks.length || 0;\n\n    const todoDayTasksNumber = totalDayTasks.filter(\n      task => task.status === 'todo'\n    ).length;\n    const inProgressDayTasksNumber = totalDayTasks.filter(\n      task => task.status === 'inProgress'\n    ).length;\n    const doneDayTasksNumber = totalDayTasks.filter(\n      task => task.status === 'done'\n    ).length;\n\n    const chartData = [\n      {\n        name: 'Todo',\n        day: todoDayTasksNumber,\n        dayPercentage: Math.round(\n          (todoDayTasksNumber / totalDayTasksNumber) * 100\n        ),\n        month: todoMonthTasksNumber,\n        monthPercentage: Math.round(\n          (todoMonthTasksNumber / totalMonthTasksNumber) * 100\n        ),\n      },\n      {\n        name: 'In Progress',\n        day: inProgressDayTasksNumber,\n        dayPercentage: Math.floor(\n          (inProgressDayTasksNumber / totalDayTasksNumber) * 100\n        ),\n        month: inProgressMonthTasksNumber,\n        monthPercentage: Math.floor(\n          (inProgressMonthTasksNumber / totalMonthTasksNumber) * 100\n        ),\n      },\n      {\n        name: 'Done',\n        day: doneDayTasksNumber,\n        dayPercentage: Math.round(\n          (doneDayTasksNumber / totalDayTasksNumber) * 100\n        ),\n        month: doneMonthTasksNumber,\n        monthPercentage: Math.round(\n          (doneMonthTasksNumber / totalMonthTasksNumber) * 100\n        ),\n      },\n    ];\n\n    return chartData;\n  }\n\n  useEffect(() => {\n    // if (currentMonth !== month) {\n    //   dispatch(getTasksByMonth(currentMonth));\n    // }\n\n    dispatch(getTasksByMonth(currentMonth));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentDayMonth]);\n\n  useEffect(() => {\n    if (tasks.length) {\n      setChartData(processTaskData(currentDay));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [tasks, currentDay]);\n\n  const formatValue = value => {\n    return !isNaN(value) && value !== 0 ? `${value.toFixed(0)}%` : '';\n  };\n\n  const generateLinearGradient = (id, color, opacity) => (\n    <linearGradient id={id} x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n      <stop offset=\"0%\" stopColor={color} stopOpacity={opacity} />\n      <stop offset=\"100%\" stopColor={color} stopOpacity={1} />\n    </linearGradient>\n  );\n\n  return (\n    <Container>\n      <Title>Tasks</Title>\n      <ResponsiveContainer width=\"100%\" height={290}>\n        <BarChart\n          data={chartData}\n          barGap={isMobile ? 8 : 14}\n          barSize={isMobile ? 22 : 27}\n          margin={{\n            top: 24,\n            right: 0,\n            left: -16,\n            bottom: 20,\n          }}\n        >\n          <CartesianGrid\n            stroke={theme.borderChart}\n            strokeWidth={1}\n            strokeDasharray=\"none\"\n            vertical={false}\n          />\n\n          <XAxis\n            dataKey=\"name\"\n            tick={{\n              fontFamily: 'Inter',\n              fontSize: isMobile ? 12 : 16,\n              fill: theme.textPrimaryLight,\n              fontWeight: 400,\n              lineHeight: 1.33,\n            }}\n            tickLine={false}\n            tickMargin={20}\n            axisLine={false}\n          />\n\n          <YAxis\n            tickFormatter={value => value}\n            domain={[0, 100]}\n            allowDataOverflow={true}\n            scale=\"linear\"\n            axisLine={false}\n            tickLine={false}\n            tickMargin={14}\n            tick={{\n              fontFamily: 'Inter',\n              fontSize: 14,\n              fill: theme.textPrimaryLight,\n              fontWeight: 400,\n              lineHeight: 1.5,\n            }}\n          />\n\n          <Bar\n            dataKey=\"dayPercentage\"\n            fill=\"url(#schedule-day)\"\n            radius={[0, 0, 8, 8]}\n          >\n            <LabelList\n              dataKey=\"dayPercentage\"\n              position=\"top\"\n              offset={8}\n              fill={theme.textPrimaryLight}\n              formatter={formatValue}\n            />\n          </Bar>\n          <Bar\n            dataKey=\"monthPercentage\"\n            fill=\"url(#schedule-month)\"\n            radius={[0, 0, 8, 8]}\n          >\n            <LabelList\n              dataKey=\"monthPercentage\"\n              position=\"top\"\n              offset={8}\n              fill={theme.textPrimaryLight}\n              formatter={formatValue}\n            />\n          </Bar>\n          <defs>\n            {generateLinearGradient('schedule-day', theme.accentRedLight, 0)}\n            {generateLinearGradient('schedule-month', theme.accentPrimary, 0)}\n          </defs>\n        </BarChart>\n      </ResponsiveContainer>\n    </Container>\n  );\n};\n\nexport default StatisticsChart;\n","import { Statistics } from '../../components/StatisticsComponents';\n\nconst StatisticsPage = () => (\n  <div>\n    <Statistics />\n  </div>\n);\n\nexport default StatisticsPage;"],"names":["styled","_templateObject","_taggedTemplateLiteral","_ref","theme","white","_ref2","accentPrimary","_ref3","_ref4","_ref5","_ref6","calendarInactive","_ref7","calendarWeekday","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","_ref16","_ref17","_ref18","_ref19","_ref20","_ref21","device","General","bgStatistics","Option","_templateObject2","Buttons","_templateObject3","ButtonData","Button","_templateObject4","Arrows","_templateObject5","Arrow","_templateObject6","borderStatistics","props","next","textPrimaryLight","IconPrev","FaChevronLeft","_templateObject7","IconNext","FaChevronRight","_templateObject8","List","_templateObject9","Item","_templateObject10","Icon","_templateObject11","showFor","accentRedLight","_useState","useState","Date","_useState2","_slicedToArray","currentDayMonth","setCurrentDayMonth","Datepickerinput","forwardRef","ref","value","onClick","_jsx","className","children","_jsxs","DatePicker","selected","onChange","date","customInput","dateFormat","formatWeekDay","nameOfDay","substring","calendarStartDay","prev","type","newDate","setDate","getDate","StatisticsChart","Container","borderChart","Title","_","useTheme","tasks","useSelector","getTasks","isMobile","useMediaQuery","dispatch","useDispatch","currentMonth","format","currentDay","chartData","setChartData","useEffect","getTasksByMonth","length","totalMonthTasksNumber","todoMonthTasksNumber","filter","task","status","inProgressMonthTasksNumber","doneMonthTasksNumber","totalDayTasks","totalDayTasksNumber","todoDayTasksNumber","inProgressDayTasksNumber","doneDayTasksNumber","name","day","dayPercentage","Math","round","month","monthPercentage","floor","processTaskData","formatValue","isNaN","concat","toFixed","generateLinearGradient","id","color","opacity","x1","y1","x2","y2","offset","stopColor","stopOpacity","ResponsiveContainer","width","height","BarChart","data","barGap","barSize","margin","top","right","left","bottom","CartesianGrid","stroke","strokeWidth","strokeDasharray","vertical","XAxis","dataKey","tick","fontFamily","fontSize","fill","fontWeight","lineHeight","tickLine","tickMargin","axisLine","YAxis","tickFormatter","domain","allowDataOverflow","scale","Bar","radius","LabelList","position","formatter","Statistics"],"sourceRoot":""}