{"version":3,"file":"static/js/382.9355a5f1.chunk.js","mappings":"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","sources":["components/Statistics/Calendar/Calendar.styled.jsx","components/Statistics/Calendar/Calendar.jsx","components/Statistics/StatisticsChart.styled.jsx","components/Statistics/StatisticsChart.jsx","components/Statistics/Statistics.styled.jsx","components/Statistics/Statistics.jsx","pages/StatisticsPage/StatisticsPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nimport 'react-calendar/dist/Calendar.css';\n\nexport const MiniCalendar = styled.div`\n  position: absolute;\n  top: 66px;\n  left: 14px;\n  z-index: 2;\n\n  @media screen and (min-width: 768px) {\n    top: 174px;\n    left: 64px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    top: 176px;\n    left: 153px;\n  }\n\n  & .react-calendar {\n    width: 235px;\n    max-width: 100%;\n\n    font-family: 'Inter';\n    line-height: 1.125em;\n\n    border-radius: 8px;\n\n    color: ${({ theme }) => theme.white};\n    background-color: ${({ theme }) => theme.accentPrimary};\n  }\n\n  & .react-calendar--doubleView {\n    width: 700px;\n  }\n\n  & .react-calendar--doubleView .react-calendar__viewContainer {\n    display: flex;\n    margin: -0.5em;\n  }\n\n  & .react-calendar__year-view {\n    padding: 0 18px 18px;\n  }\n\n  & .react-calendar--doubleView .react-calendar__viewContainer > * {\n    width: 50%;\n    margin: 0.5em;\n  }\n\n  & .react-calendar,\n  & .react-calendar *,\n  & .react-calendar *:before,\n  & .react-calendar *:after {\n    -moz-box-sizing: border-box;\n    -webkit-box-sizing: border-box;\n    box-sizing: border-box;\n  }\n\n  & .react-calendar button {\n    margin: 0;\n    border: 0;\n    outline: none;\n\n    transition: color 300ms ease, background-color 350ms ease;\n\n    &:enabled:hover {\n      cursor: pointer;\n    }\n  }\n\n  & .react-calendar__navigation {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    margin-bottom: 8px;\n    padding: 18px 18px 0;\n\n    & button {\n      min-width: 30px;\n    }\n\n    & button:enabled:hover,\n    button:enabled:focus {\n      background: none;\n    }\n  }\n\n  & .react-calendar__navigation__label {\n    margin: 0;\n    padding: 0;\n\n    font-family: Inter;\n    font-size: 16px;\n    font-weight: 600;\n    letter-spacing: -0.32px;\n\n    color: ${({ theme }) => theme.white};\n  }\n\n  & .react-calendar__navigation__arrow {\n    padding: 0;\n    margin: 0;\n\n    color: ${({ theme }) => theme.white};\n\n    & svg {\n      width: 12px;\n      height: 12px;\n    }\n  }\n\n  & .react-calendar__navigation__next-button {\n    padding-left: 10px;\n    padding-top: 10px;\n    padding-bottom: 10px;\n  }\n\n  & .react-calendar__navigation__prev-button {\n    padding-right: 10px;\n    padding-top: 10px;\n    padding-bottom: 10px;\n  }\n\n  & .react-calendar__year-view__months__month,\n  .react-calendar__decade-view__years__year,\n  .react-calendar__century-view__decades__decade {\n    color: ${({ theme }) => theme.white};\n    padding: 0;\n  }\n\n  & .react-calendar__month-view__days {\n    margin-top: 12px;\n    padding: 0 18px 18px;\n  }\n\n  & .react-calendar__month-view__weekdays {\n    padding: 0 18px;\n\n    text-align: center;\n    text-transform: uppercase;\n    font-weight: 500;\n    font-size: 14px;\n\n    border-bottom: 1px solid ${({ theme }) => theme.calendarInactive};\n  }\n\n  & .react-calendar__month-view__weekdays__weekday {\n    color: ${({ theme }) => theme.calendarWeekday};\n\n    & abbr[title] {\n      text-decoration: none;\n    }\n  }\n\n  & .react-calendar__month-view__weekNumbers .react-calendar__tile {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    font-size: 14px;\n    font-weight: 400;\n\n    color: ${({ theme }) => theme.white};\n  }\n\n  & .react-calendar__month-view__days__day,\n  .react-calendar__month-view__days__day--weekend {\n    color: ${({ theme }) => theme.white};\n\n    &:enabled:hover {\n      color: ${({ theme }) => theme.accentPrimary};\n    }\n  }\n\n  & .react-calendar__month-view__days__day--neighboringMonth {\n    color: ${({ theme }) => theme.calendarInactive};\n  }\n\n  & .react-calendar__tile {\n    max-width: 100%;\n    padding: 6px 0;\n\n    background: none;\n    text-align: center;\n    font-weight: 400;\n    line-height: 16px;\n\n    border-radius: 50%;\n\n    &:disabled {\n      color: ${({ theme }) => theme.calendarInactive};\n    }\n\n    &:enabled:focus,\n    :enabled:hover {\n      background-color: ${({ theme }) => theme.white};\n    }\n  }\n\n  & .react-calendar__tile--now,\n  .react-calendar__tile--hasActive {\n    &:enabled:focus,\n    :enabled:hover {\n      color: ${({ theme }) => theme.accentPrimary};\n      background-color: ${({ theme }) => theme.white};\n    }\n  }\n\n  & .react-calendar__tile--active {\n    color: ${({ theme }) => theme.accentPrimary};\n    background-color: ${({ theme }) => theme.white};\n\n    &:enabled:focus,\n    :enabled:hover {\n      color: ${({ theme }) => theme.accentPrimary};\n      background-color: ${({ theme }) => theme.white};\n    }\n  }\n\n  & .react-calendar--selectRange .react-calendar__tile--hover {\n    color: ${({ theme }) => theme.accentPrimary};\n    background-color: ${({ theme }) => theme.white};\n  }\n`;\n","import { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\nimport { FaChevronLeft, FaChevronRight } from 'react-icons/fa';\nimport Calendar from 'react-calendar';\nimport { MiniCalendar } from './Calendar.styled';\nimport { format } from 'date-fns';\nimport { useState } from 'react';\n\nconst CustomCalendar = ({ onDateChange }) => {\n  const [date] = useState(new Date());\n\n  const handleDateChange = date => {\n    const formattedDate = format(date, 'dd MMMM yyyy');\n    onDateChange(formattedDate);\n  };\n\n  const formatDayOfWeek = (_, date) => {\n    return format(date, 'EEEEE');\n  };\n\n  return (\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\n      <MiniCalendar>\n        <Calendar\n          onChange={handleDateChange}\n          value={date}\n          prev2Label={null}\n          next2Label={null}\n          prevLabel={<FaChevronLeft />}\n          nextLabel={<FaChevronRight />}\n          formatShortWeekday={formatDayOfWeek}\n          view=\"days\"\n        />\n      </MiniCalendar>\n    </LocalizationProvider>\n  );\n};\n\nexport default CustomCalendar;\n","import styled from '@emotion/styled';\n\nexport const device = {\n  tablet: `(min-width: 768px)`,\n  desktop: `(min-width: 1440px)`,\n};\n\nexport const Container = styled.div`\n  padding: 40px 14px;\n\n  border-radius: 20px;\n  border: 0.8px solid ${({ theme }) => theme.borderChart};\n\n  @media ${device.tablet} {\n    padding: 32px;\n\n    border-radius: 29px;\n  }\n\n  @media ${device.desktop} {\n    padding: 40px;\n  }\n`;\n\nexport const Title = styled.p`\n  margin-bottom: 8px;\n\n  font-weight: 600;\n  line-height: 1.5;\n\n  color: ${({ theme }) => theme.textPrimaryLight};\n\n  @media ${device.tablet} {\n    margin-bottom: 12px;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { format } from 'date-fns';\nimport { useMediaQuery, useTheme } from '@mui/material';\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  ResponsiveContainer,\n  LabelList,\n} from 'recharts';\n\nimport { Container, Title } from './StatisticsChart.styled';\nimport { getTasksByMonth } from 'redux/tasks/operations';\nimport { useDispatch } from 'react-redux';\nimport { getTasks, getMonth } from 'redux/tasks/tasksSlice';\n\nconst Chart = ({ currentDayMonth, _ }) => {\n  const theme = useTheme();\n  const tasks = useSelector(getTasks);\n  const month = useSelector(getMonth);\n  const isMobile = useMediaQuery('(max-width: 768px)');\n\n  const dispatch = useDispatch();\n\n  const currentMonth = format(currentDayMonth, 'yyyy-MM');\n  const currentDay = format(currentDayMonth, 'yyyy-MM-dd');\n\n  const [chartData, setChartData] = useState([]);\n\n  function processTaskData(currentDay) {\n    const totalMonthTasksNumber = tasks.length;\n\n    const todoMonthTasksNumber = tasks.filter(\n      task => task.status === 'todo'\n    ).length;\n    const inProgressMonthTasksNumber = tasks.filter(\n      task => task.status === 'inProgress'\n    ).length;\n    const doneMonthTasksNumber = tasks.filter(\n      task => task.status === 'done'\n    ).length;\n\n    const totalDayTasks = tasks.filter(task => task.date === currentDay);\n    const totalDayTasksNumber = totalDayTasks.length || 0;\n\n    const todoDayTasksNumber = totalDayTasks.filter(\n      task => task.status === 'todo'\n    ).length;\n    const inProgressDayTasksNumber = totalDayTasks.filter(\n      task => task.status === 'inProgress'\n    ).length;\n    const doneDayTasksNumber = totalDayTasks.filter(\n      task => task.status === 'done'\n    ).length;\n\n    const chartData = [\n      {\n        name: 'Todo',\n        day: todoDayTasksNumber,\n        dayPercentage: Math.round(\n          (todoDayTasksNumber / totalDayTasksNumber) * 100\n        ),\n        month: todoMonthTasksNumber,\n        monthPercentage: Math.round(\n          (todoMonthTasksNumber / totalMonthTasksNumber) * 100\n        ),\n      },\n      {\n        name: 'In Progress',\n        day: inProgressDayTasksNumber,\n        dayPercentage: Math.floor(\n          (inProgressDayTasksNumber / totalDayTasksNumber) * 100\n        ),\n        month: inProgressMonthTasksNumber,\n        monthPercentage: Math.floor(\n          (inProgressMonthTasksNumber / totalMonthTasksNumber) * 100\n        ),\n      },\n      {\n        name: 'Done',\n        day: doneDayTasksNumber,\n        dayPercentage: Math.round(\n          (doneDayTasksNumber / totalDayTasksNumber) * 100\n        ),\n        month: doneMonthTasksNumber,\n        monthPercentage: Math.round(\n          (doneMonthTasksNumber / totalMonthTasksNumber) * 100\n        ),\n      },\n    ];\n\n    return chartData;\n  }\n\n  useEffect(() => {\n    if (currentMonth !== month) {\n      dispatch(getTasksByMonth(currentMonth));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentDayMonth]);\n\n  useEffect(() => {\n    if (tasks.length) {\n      setChartData(processTaskData(currentDay));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [tasks, currentDay]);\n\n  const formatValue = value => {\n    return !isNaN(value) && value !== 0 ? `${value.toFixed(0)}%` : '';\n  };\n\n  const generateLinearGradient = (id, color, opacity) => (\n    <linearGradient id={id} x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n      <stop offset=\"0%\" stopColor={color} stopOpacity={opacity} />\n      <stop offset=\"100%\" stopColor={color} stopOpacity={1} />\n    </linearGradient>\n  );\n\n  return (\n    <Container>\n      <Title>Tasks</Title>\n      <ResponsiveContainer width=\"100%\" height={290}>\n        <BarChart\n          data={chartData}\n          barGap={isMobile ? 8 : 14}\n          barSize={isMobile ? 22 : 27}\n          margin={{\n            top: 24,\n            right: 0,\n            left: -16,\n            bottom: 20,\n          }}\n        >\n          <CartesianGrid\n            stroke={theme.borderChart}\n            strokeWidth={1}\n            strokeDasharray=\"none\"\n            vertical={false}\n          />\n\n          <XAxis\n            dataKey=\"name\"\n            tick={{\n              fontFamily: 'Inter',\n              fontSize: isMobile ? 12 : 16,\n              fill: theme.textPrimaryLight,\n              fontWeight: 400,\n              lineHeight: 1.33,\n            }}\n            tickLine={false}\n            tickMargin={20}\n            axisLine={false}\n          />\n\n          <YAxis\n            tickFormatter={value => value}\n            domain={[0, 100]}\n            allowDataOverflow={true}\n            scale=\"linear\"\n            axisLine={false}\n            tickLine={false}\n            tickMargin={14}\n            tick={{\n              fontFamily: 'Inter',\n              fontSize: 14,\n              fill: theme.textPrimaryLight,\n              fontWeight: 400,\n              lineHeight: 1.5,\n            }}\n          />\n\n          <Bar\n            dataKey=\"dayPercentage\"\n            fill=\"url(#schedule-day)\"\n            radius={[0, 0, 8, 8]}\n          >\n            <LabelList\n              dataKey=\"dayPercentage\"\n              position=\"top\"\n              offset={8}\n              fill={theme.textPrimaryLight}\n              formatter={formatValue}\n            />\n          </Bar>\n          <Bar\n            dataKey=\"monthPercentage\"\n            fill=\"url(#schedule-month)\"\n            radius={[0, 0, 8, 8]}\n          >\n            <LabelList\n              dataKey=\"monthPercentage\"\n              position=\"top\"\n              offset={8}\n              fill={theme.textPrimaryLight}\n              formatter={formatValue}\n            />\n          </Bar>\n          <defs>\n            {generateLinearGradient('schedule-day', theme.accentRedLight, 0)}\n            {generateLinearGradient('schedule-month', theme.accentPrimary, 0)}\n          </defs>\n        </BarChart>\n      </ResponsiveContainer>\n    </Container>\n  );\n};\n\nexport default Chart;\n","import styled from '@emotion/styled';\nimport { FaChevronLeft, FaChevronRight } from 'react-icons/fa';\nimport Button from 'components/Button/Button';\n\nexport const device = {\n  tablet: `(min-width: 768px)`,\n  desktop: `(min-width: 1440px)`,\n};\n\nexport const General = styled.div`\n  position: relative;\n  margin: 0 auto;\n  padding: 28px 14px 135px;\n\n  width: 335px;\n  max-width: 100%;\n\n  border-radius: 16px;\n\n  background-color: ${({ theme }) => theme.bgStatistics};\n\n  @media ${device.tablet} {\n    width: 704px;\n    padding: 132px 32px 224px;\n  }\n\n  @media ${device.desktop} {\n    width: 1087px;\n    padding: 134px 114px 104px;\n  }\n`;\n\nexport const Option = styled.div`\n  margin-bottom: 40px;\n\n  @media ${device.tablet} {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    margin-right: 32px;\n    margin-left: 32px;\n  }\n\n  @media ${device.desktop} {\n    margin-right: 40px;\n    margin-left: 40px;\n  }\n`;\n\nexport const Buttons = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  @media ${device.tablet} {\n    justify-content: flex-start;\n    gap: 8px;\n  }\n`;\n\nexport const ButtonData = styled(Button)`\n  max-width: 190px;\n  padding: 6px 12px;\n\n  font-weight: 700;\n  line-height: 1.28;\n  text-transform: uppercase;\n\n  @media ${device.tablet} {\n    padding-top: 8px;\n    padding-bottom: 8px;\n\n    font-size: 16px;\n    line-height: 1.12;\n  }\n`;\n\nexport const Arrows = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const Arrow = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  padding: 7px 10px;\n\n  border: 1px solid ${({ theme }) => theme.borderStatistics};\n  border-radius: ${props => (props.next ? '0 8px 8px 0' : '8px 0 0 8px;')};\n\n  color: ${({ theme }) => theme.textPrimaryLight};\n  background-color: ${({ theme }) => theme.bgStatistics};\n\n  cursor: pointer;\n\n  transition: fill 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover > svg {\n    transform: scale(1.2);\n    color: ${({ theme }) => theme.accentPrimary};\n  }\n\n  @media ${device.tablet} {\n    padding-top: 8px;\n    padding-bottom: 8px;\n  }\n`;\n\nexport const IconPrev = styled(FaChevronLeft)`\n  width: 16px;\n  height: 16px;\n\n  fill: currentColor;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n`;\n\nexport const IconNext = styled(FaChevronRight)`\n  width: 16px;\n  height: 16px;\n\n  fill: currentColor;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  align-items: center;\n  gap: 14px;\n\n  margin: 0;\n  padding: 0;\n  margin-top: 20px;\n\n  list-style-type: none;\n\n  @media ${device.tablet} {\n    margin-top: 0px;\n    gap: 20px;\n  }\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  font-family: Poppins;\n  font-weight: 400;\n  line-height: 1.28;\n\n  color: ${({ theme }) => theme.textPrimaryLight};\n\n  @media ${device.tablet} {\n    font-size: 16px;\n    line-height: 1.12;\n  }\n`;\n\nexport const Icon = styled.div`\n  width: 8px;\n  height: 8px;\n  margin-right: 8px;\n\n  border-radius: 50%;\n\n  background-color: ${({ theme, showFor }) =>\n    showFor === 'day' ? theme.accentPrimary : theme.accentRedLight};\n`;\n","import { useState } from 'react';\nimport { format, parseISO, startOfToday, parse } from 'date-fns';\nimport Calendar from './Calendar/Calendar';\nimport Chart from './StatisticsChart';\n\nimport {\n  General,\n  Option,\n  Buttons,\n  ButtonData,\n  IconNext,\n  List,\n  Item,\n  Icon,\n  Arrow,\n  Arrows,\n  IconPrev,\n} from './Statistics.styled';\n\nconst Statistics = () => {\n  const today = startOfToday();\n  const [currentDayMonth, setCurrentDayMonth] = useState(\n    parseISO(format(today, 'yyyy-MM-dd'))\n  );\n  const [showCalendar, setShowCalendar] = useState(false);\n\n  const handleDateChange = newDate => {\n    const parsedDate = parse(newDate, 'dd MMMM yyyy', new Date());\n    setCurrentDayMonth(parsedDate);\n    setShowCalendar(false);\n  };\n\n  const handleLastDay = () => {\n    const newDate = new Date(currentDayMonth);\n    newDate.setDate(newDate.getDate() - 1);\n    setCurrentDayMonth(newDate);\n  };\n\n  const handleNextDay = () => {\n    const newDate = new Date(currentDayMonth);\n    newDate.setDate(newDate.getDate() + 1);\n    setCurrentDayMonth(newDate);\n  };\n\n  const miniCalendar = () => {\n    setShowCalendar(prevState => !prevState);\n  };\n\n  return (\n    <General>\n      <Option>\n        <Buttons>\n          <ButtonData type=\"button\" onClick={miniCalendar}>\n            {format(currentDayMonth, 'dd MMMM yyyy')}\n          </ButtonData>\n          <Arrows>\n            <Arrow prev type=\"button\" onClick={handleLastDay}>\n              <IconPrev />\n            </Arrow>\n            <Arrow next type=\"button\" onClick={handleNextDay}>\n              <IconNext />\n            </Arrow>\n          </Arrows>\n        </Buttons>\n        <List>\n          <Item>\n            <Icon showFor=\"day\" />\n            By Day\n          </Item>\n          <Item>\n            <Icon showFor=\"month\" />\n            By Month\n          </Item>\n        </List>\n      </Option>\n\n      <Chart\n        currentDayMonth={currentDayMonth}\n        setCurrentDayMonth={setCurrentDayMonth}\n      />\n      {showCalendar && <Calendar onDateChange={handleDateChange} />}\n    </General>\n  );\n};\n\nexport default Statistics;\n","import Statistics from '../../components/Statistics/Statistics';\n\nconst StatisticsPage = () => (\n  <div>\n    <Statistics />\n  </div>\n);\n\nexport default StatisticsPage;"],"names":["MiniCalendar","styled","_templateObject","_taggedTemplateLiteral","_ref","theme","white","_ref2","accentPrimary","_ref3","_ref4","_ref5","_ref6","calendarInactive","_ref7","calendarWeekday","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","_ref16","_ref17","_ref18","_ref19","_ref20","_ref21","onDateChange","_useState","useState","Date","date","_slicedToArray","_jsx","LocalizationProvider","dateAdapter","AdapterDateFns","children","Calendar","onChange","formattedDate","format","value","prev2Label","next2Label","prevLabel","FaChevronLeft","nextLabel","FaChevronRight","formatShortWeekday","_","view","device","Container","borderChart","Title","_templateObject2","textPrimaryLight","currentDayMonth","useTheme","tasks","useSelector","getTasks","month","getMonth","isMobile","useMediaQuery","dispatch","useDispatch","currentMonth","currentDay","_useState2","chartData","setChartData","useEffect","getTasksByMonth","length","totalMonthTasksNumber","todoMonthTasksNumber","filter","task","status","inProgressMonthTasksNumber","doneMonthTasksNumber","totalDayTasks","totalDayTasksNumber","todoDayTasksNumber","inProgressDayTasksNumber","doneDayTasksNumber","name","day","dayPercentage","Math","round","monthPercentage","floor","processTaskData","formatValue","isNaN","concat","toFixed","generateLinearGradient","id","color","opacity","_jsxs","x1","y1","x2","y2","offset","stopColor","stopOpacity","ResponsiveContainer","width","height","BarChart","data","barGap","barSize","margin","top","right","left","bottom","CartesianGrid","stroke","strokeWidth","strokeDasharray","vertical","XAxis","dataKey","tick","fontFamily","fontSize","fill","fontWeight","lineHeight","tickLine","tickMargin","axisLine","YAxis","tickFormatter","domain","allowDataOverflow","scale","Bar","radius","LabelList","position","formatter","accentRedLight","General","bgStatistics","Option","Buttons","_templateObject3","ButtonData","Button","_templateObject4","Arrows","_templateObject5","Arrow","_templateObject6","borderStatistics","props","next","IconPrev","_templateObject7","IconNext","_templateObject8","List","_templateObject9","Item","_templateObject10","Icon","_templateObject11","showFor","today","startOfToday","parseISO","setCurrentDayMonth","_useState3","_useState4","showCalendar","setShowCalendar","type","onClick","prevState","prev","newDate","setDate","getDate","Chart","parsedDate","parse","Statistics"],"sourceRoot":""}